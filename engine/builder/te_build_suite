#! /bin/sh
#
# Test Environment Builder
#
# Script for building of the test package.
# Parameters are unique package name and package source directory.
#
#
# Copyright (C) 2003 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author Elena Vengerova <Elena.Vengerova@oktet.ru>
#
# $Id$
#

# Parameters are package name

if test -n "${TE_BUILD}" ; then
    cd ${TE_BUILD}
fi
if test -e builder.conf.processed ; then
    . builder.conf.processed
else
    SCRIPT_DIR="`dirname $0`"
fi

SUITE="$1"
SOURCES="$2"
FROM_MAKEFILE=$3

if test "${SOURCES:0:1}" != "/" ; then
    if test -z "${TE_BASE}" ; then
        echo 'Export TE_BASE or full path to suite sources, please'
        exit 1
    fi
    SOURCES="${TE_BASE}/suites/${SOURCES:-${SUITE}}"
fi

pushd "${SOURCES}" >/dev/null
if test -e configure.ac ; then
    if test ! -e configure ; then
        aclocal || exit 1 ;
        if cat configure.ac | grep -q AC_CONFIG_HEADER ; then
            autoheader || exit 1 ;
        fi ;
        autoconf -Wall || exit 1 ;
        automake || exit 1 ;
    fi
fi
popd >/dev/null

if test -n "${TE_BUILD}" ; then
    cd "${TE_BUILD}"
    mkdir -p "suites/${SUITE}"
    cd "suites/${SUITE}"
else
    cd "${SOURCES}"
fi

if test ! -e Makefile ; then
    SUITE_NAME=`echo ${SUITE} | tr .- _`
    PARMS="`eval echo '$TE_BS_SUITE_'${SUITE_NAME}'_PARMS'`"
    ADD_CPPFLAGS="$default_CPPFLAGS \
                  `eval echo '$TE_BS_SUITE_'$SUITE_NAME'_CPPFLAGS'`"
    ADD_CFLAGS="$default_CFLAGS \
                `eval echo '$TE_BS_SUITE_'$SUITE_NAME'_CFLAGS'`"
    ADD_LDFLAGS="$default_LDFLAGS \
                 `eval echo '$TE_BS_SUITE_'$SUITE_NAME'_LDFLAGS'`"
    if test "$default_CC" ; then
        export CC="$default_CC"
    fi
                 
    echo "${SOURCES}/configure -q --prefix=${TE_INSTALL_SUITE} $PARMS"

    TE_INSTALL="${TE_INSTALL}" \
    TE_PATH="${TE_PATH}" \
    TE_BASE="${TE_BASE}" \
    TE_CFLAGS="-O0 -ggdb -Wall -W ${ADD_CFLAGS} " \
    TE_CPPFLAGS="-I${TE_INSTALL}/default/include ${ADD_CPPFLAGS}" \
    TE_LDFLAGS="-L${TE_INSTALL}/default/lib ${ADD_LDFLAGS}" \
    TE_PLATFORM=default \
    CFLAGS="" \
    eval "${SOURCES}/configure" -q --prefix="${TE_INSTALL_SUITE}" \
          $PARMS || exit 1
fi
make install || exit 1

if test "${FROM_MAKEFILE}" = "yes" ; then
    exit 0
fi

# Now upgrade dynamic builder.conf
if test -n "${TE_BUILD}" ; then
   if ! cat "${TE_BUILD}/suites/Makefile.suites" | grep -q "=${SUITE}" ; then
       echo TE_BS_SUITES+=${SUITE} >> "${TE_BUILD}/suites/Makefile.suites"
   fi
fi

exit 0
