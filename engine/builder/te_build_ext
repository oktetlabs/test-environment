#! /bin/bash
#
# Test Environment Builder
#
# Script for building external components
#
# Copyright (C) 2016 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# @author Artem V. Andreev <Artem.Andreev@oktetlabs.ru>
#

SCRIPT_DIR=`dirname $0`
. ${SCRIPT_DIR}/te_functions

set -e

install_extension_parts () {
    local objlist="$1"
    local destdir="$2"

    if test -n "$objlist"; then
        (
            mkdir -p "$destdir"
            te_eval_or_ssh "$platform" \
                           "cd '$srcdir';
                            export EXT_SOURCES=\"\$PWD\";
                            test -n '$builddir' && cd '$builddir';
                            cp -a $objlist '$destdir'"
            find -H "$destdir" -type l | xargs ${SCRIPT_DIR}/te_fixlink "$PWD" "$destdir"
        )
    fi
}

declare prefix=
declare platform=
declare srcdir=
declare prepare=
declare builddir=
declare build=
declare telibs=
declare teincludes=
declare expheaders=
declare explibs=
declare expbin=
declare tatype=
declare envvars=
declare tce=

for arg; do
    case "$arg" in
        --prefix=*)
            prefix="${arg#--prefix=}"
            ;;
        --platform=*)
            platform="${arg#--platform=}"
            ;;
        --srcdir=*)
            srcdir="${arg#--srcdir=}"
            ;;
        --prepare=*)
            prepare="${arg#--prepare=}"
            ;;
        --builddir=*)
            builddir="${arg#--builddir=}"
            ;;
        --build=*)
            build="${arg#--build=}"
            ;;
        --telibs=*)
            telibs="${telibs}${telibs:+ }${arg#--telibs=}"
            ;;
        --includes=*)
            teincludes="${teincludes}${teincludes:+ }${arg#--includes=}"
            ;;
        --expheaders=*)
            expheaders="${expheaders}${expheaders:+ }${arg#--expheaders=}"
            ;;
        --explibs=*)
            explibs="${explibs}${explibs:+ }${arg#--explibs=}"
            ;;
        --expbin=*)
            expbin="${expbin}${expbin:+ }${arg#--expbin=}"
            ;;
        --tatype=*)
            tatype="${arg#--tatype=}"
            ;;
        --envvars=*)
            envvars="${envvars}${envvars:+ }${arg#--envvars=}"
            ;;
        --tce)
            tce=1
            ;;
        *)
            echo "Invalid option '$arg'" >&2
            exit 1
            ;;
    esac
done

declare telibflags
declare l
declare inc
declare v
declare exports=

telibflags="-L$prefix/$platform/lib"
for l in $telibs; do
    telibflags="$telibflags -l$l"
done

tecppflags=""
for inc in $teincludes; do
    tecppflags="$tecppflags -I$prefix/$platform/include/$inc"
done
tecppflags="$tecppflags -I$prefix/$platform/include"

for v in $envvars; do
        exports="$exports export $v=\"${!v}\"; "
done

(
    cd "$srcdir"; eval "export EXT_BUILDDIR=\"${builddir:-.}\"; $prepare"
) || exit 1

(
        te_eval_or_ssh "$platform" "cd $srcdir ;
                      test -n \"$builddir\" && mkdir -p \"$builddir\" ;
                      cd ${builddir:-.} ;
                      export TE_PREFIX=\"$prefix/$platform\" ;
                      export TE_DO_TCE=\"$tce\"
                      export TE_CPPFLAGS=\"$tecppflags\" ;
                      export TE_LDFLAGS=\"$telibflags\" ;
                      export EXT_SOURCES=\"$srcdir\" ;
                      $exports
                      $build"
) || exit 1
install_extension_parts "$expheaders" "$prefix/$platform/include" || exit 1
install_extension_parts "$explibs" "$prefix/$platform/lib" || exit 1
install_extension_parts "$expbin" "$prefix/agents/$tatype" || exit 1

