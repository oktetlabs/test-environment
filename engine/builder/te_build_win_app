#! /bin/sh
#
# Windows Test Agent
# Build application using native compiler
# Agruments: 
#     source directory
#     platform
#     application name
#     list of libraries
#     list of source files
#
# TE_INSTALL should be exported.
#     
# Copyright (C) 2006 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author: Elena Vengerova <Elena.Vengerova@oktetlabs.ru>
#
# $Id:  $
#

SRCDIR=$1
PLATFORM=$2
APPNAME=$3
LIBS=$4
LIBS=`eval "echo "$LIBS`
shift 4

. `dirname $0`/te_build_win_platform

WIN_DIR=${USER}_build/${APPNAME%%.exe}

if test -z "$TE_WIN32_BUILD_HOST" -o ! -d ${TE_INSTALL}/${PLATFORM} ; then
    touch ${APPNAME}
    exit 0
fi    

if ! ssh $KEY $TE_WIN32_BUILD_HOST \
         "rm -rf $WIN_DIR; mkdir -p $WIN_DIR" >/dev/null; then
    echo "Error: build host $TE_WIN32_BUILD_HOST is unreachable"
    exit 1
fi

rm -f ${APPNAME}

rm -rf tmpsrc
mkdir tmpsrc

# Apply pre-processor to application files

FILES=
for i in $* ; do 
    FILENAME=`basename ${i}` 
    if ! test "$FILENAME" = "${FILENAME%.a}" ; then break; fi
    if ! test "$FILENAME" = "${FILENAME%.o}" ; then break; fi
    FILES="${FILES} ${FILENAME}"
    gcc -I${TE_INSTALL}/i686-pc-cygwin/include \
        -I${TE_INSTALL}/${PLATFORM}/include \
        -I${SRCDIR} -I. -DWINDOWS -D__CYGWIN__ \
        -include ${TE_INSTALL}/${PLATFORM}/include/te_win.h \
        -P -E $i -o ${FILENAME}.tmp ; 
    cat ${FILENAME}.tmp | awk --posix '\
    /^INCLUDE/ { printf("#include <%s>\n", \
                 substr($1, 9, length($1) - 9)); next; } \
    { print $0; }'  > tmpsrc/${FILENAME} ; 
    rm ${FILENAME}.tmp ; 
    indent tmpsrc/${FILENAME} ;
done
ln -s ${TE_INSTALL}/${PLATFORM} ${PLATFORM}

# Generate the script
cat >build.sh <<EOF
MSSDK_CYGWIN=\$( cygpath -u "\$MSSDK" ) 
export PATH="\${MSSDK_CYGWIN}/Bin$PATH_POSTFIX:\$PATH"
export LIB="\${MSSDK}\Lib$LIB_POSTFIX;\$LIB"
rm src.tgz
cd tmpsrc 
cl /nologo -I../${PLATFORM}/include -DWINDOWS -D_CRT_SECURE_NO_DEPRECATE \
   -D_WIN32_WINNT=0x0501 \
   -DSOL_IP=IPPROTO_IP -DSOL_IPV6=IPPROTO_IPV6 \
   -DSOL_TCP=IPPROTO_TCP -DSOL_UDP=IPPROTO_UDP \
   /w /Od /Zi *.c \
   /link /OUT:${APPNAME} /MAP /LIBPATH:../${PLATFORM}/lib \
   ${LIBS} ${ADD_LIB} 
cd ../../
rm app.tgz   
tar czf app.tgz *   
EOF
chmod a+x build.sh

tar czhf src.tgz tmpsrc ${PLATFORM} build.sh

# Build the application

scp $KEY src.tgz ${TE_WIN32_BUILD_HOST}:${WIN_DIR}
rm -rf src.tgz tmpsrc ${PLATFORM} build.sh

ssh $KEY ${TE_WIN32_BUILD_HOST} \
"bash -l -c \"cd $WIN_DIR ; tar xzf src.tgz ; ./build.sh\""

scp $KEY ${TE_WIN32_BUILD_HOST}:${WIN_DIR}/tmpsrc/${APPNAME} .

if test -e ${APPNAME} ; then
    if test -n "${TE_WIN_BUILD_COPY}" ; then
        scp $KEY ${TE_WIN32_BUILD_HOST}:${USER}_build/app.tgz .
    fi
    exit 0
fi

exit 1
