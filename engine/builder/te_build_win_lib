#! /bin/sh
#
# Windows Test Agent
# Build library using native compiler
# Agruments: 
#     source directory
#     platform
#     library name
#     installation prefix for the platform
#     list of source files (basenames only)
#     
# Copyright (C) 2006 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author: Elena Vengerova <Elena.Vengerova@oktetlabs.ru>
#
# $Id:  $
#

SRCDIR="$1"
PLATFORM="$2"
LIBNAME="$3"
INCLUDE="$4/include"
shift 4

BUILDER=`dirname $0`

. $BUILDER/te_build_win_platform

WIN_DIR=${USER}_build/${LIBNAME%%.lib}_${DIR_POSTFIX}

if test -z "$TE_WIN32_BUILD_HOST" ; then
    echo "Warning: build host for windows is not specified; \
          library $LIBNAME is not (re-)built"
    touch ${LIBNAME}
    exit 0
fi

if ! ssh $KEY $TE_WIN32_BUILD_HOST \
         "rm -rf $WIN_DIR; mkdir -p $WIN_DIR" >/dev/null; then
    echo "Error: build host $TE_WIN32_BUILD_HOST is unreachable"
    exit 1
fi

rm -rf tmpsrc "${LIBNAME}"
mkdir tmpsrc
cd tmpsrc

# Apply pre-processor

for i in $* ; do 
    gcc -I${INCLUDE} -I${SRCDIR} -include te_win.h -DWINDOWS \
        -P -E -undef ${SRCDIR}/${i} -o ${i}.tmp1 ; 
    cat ${i}.tmp1 | awk --posix '\
    /^INCLUDE/ { printf("#include <%s>\n", \
                 substr($1, 9, length($1) - 9)); next; } \
    { print $0; }'  > ${i}.tmp2 ; 
    $BUILDER/te_rpc_conv ${i}.tmp2 ${i}
    rm ${i}.tmp* ; 
    indent ${i} ;
done
rm -f *~

# Generate the script
cd ..
cat >build.sh <<EOF
MSSDK_CYGWIN=\$( cygpath -u "\$MSSDK" ) 
export PATH="\${MSSDK_CYGWIN}/Bin$PATH_POSTFIX:\$PATH"
rm src.tgz
cd tmpsrc 
cl /nologo -I../${PLATFORM}/include \
           -D_WIN32_WINNT=0x0501 -D_CRT_SECURE_NO_DEPRECATE \
           -DSOL_IP=IPPROTO_IP -DSOL_IPV6=IPPROTO_IPV6 \
           -DSOL_TCP=IPPROTO_TCP -DSOL_UDP=IPPROTO_UDP \
   /Od *.c /c   
lib /OUT:${LIBNAME} /nologo *.obj
EOF

chmod a+x build.sh
ln -s ${TE_INSTALL}/${PLATFORM} ${PLATFORM}
tar czhf src.tgz tmpsrc ${PLATFORM} build.sh
scp $KEY src.tgz ${TE_WIN32_BUILD_HOST}:${WIN_DIR}
rm -rf src.tgz tmpsrc ${PLATFORM} build.sh
rm -rf tmpsrc ${PLATFORM} build.sh

ssh $KEY ${TE_WIN32_BUILD_HOST} \
"bash -l -c \"cd $WIN_DIR ; tar xzf src.tgz ; ./build.sh\""

scp $KEY ${TE_WIN32_BUILD_HOST}:$WIN_DIR/tmpsrc/${LIBNAME} .

if test -e ${LIBNAME} ; then
    exit 0
fi

exit 1
