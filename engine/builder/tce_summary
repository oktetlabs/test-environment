#! /bin/sh

cat <<EOF
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
  <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
  <TITLE>TCE Summary</TITLE>
</HEAD>
<BODY LANG="en-US" DIR="LTR">
<H1 ALIGN=CENTER>TCE Summary</H1>
<H2>`grep "Grand Total" $1 | sed 's/\*//g'`</H2>
<TABLE BORDER=1 CELLPADDING=4 CELLSPACING=3>
<TH>% of taken branches</TH>
<TH>Total branches</TH>
<TH>Source file</TH>
EOF

case "$2" in
    --datadir=*) datadir=${2#--datadir=}/; mkdir $datadir ;;
esac

awk '/^[0-9]+\.[0-9]+% of[[:space:]]*[0-9]+ branches of code taken/ { printf "%s %s %s ", $1, $3, $NF }
    /^=== / { print $2; }' $1 | 
    sort -k1,1g -k2,2nr | 
    awk -vSUBDIR=$datadir \
        '$2 != 0 { fname=$3; gsub(/\//, "-", fname);
                   printf "<tr><td>%s<td>%s<td><a href=\"%s\">%s</a></tr>\n", 
                   $1, $2, (SUBDIR ? SUBDIR fname ".html" : "#" $4) , $3 }'

echo "</TABLE>"

if test -n "$datadir"; then
    echo "</BODY>"
    echo "</HTML>"
fi

awk -vSUBDIR=$datadir ' BEGIN { myfile = "/dev/stdout" } 
      /^\*\*\*|[[:space:]]*-:[[:space:]]*0:/ { next }
      /^======/ { print "</pre>" >>myfile; 
                  if (SUBDIR) {
                     print "</body>" >>myfile
                     print "</html>" >>myfile
                     close(myfile)
                  }
                  next } 
      /^=== / { printf "<p><a name=\"%s\"></a>\n", $2 >> myfile; next }
      /^[0-9]+\.[0-9]+% of[[:space:]]*[0-9]+ lines/ { 
          if (SUBDIR) {
             name=$NF
             gsub(/\//, "-", name)
             myfile=SUBDIR name ".html"
             print "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">" >myfile
             print "<HTML>" >>myfile
             print "<HEAD>" >>myfile
             print "<META HTTP-EQUIV=\"CONTENT-TYPE\" CONTENT=\"text/html; charset=utf-8\">" >>myfile
             print "<TITLE>TCE Annotated Source for " $NF "</TITLE>" >>myfile
             print "</HEAD>" >>myfile
             print "<BODY LANG=\"en-US\" DIR=\"LTR\">" >>myfile
          }
          printf "<h2>%s</h2>\n<p>\n<pre>", $NF >> myfile}
      { gsub(/&/, "\\&amp;"); gsub(/</, "\\&lt;"); gsub(/>/, "\\&gt;"); gsub(/"/, "\\&quot;"); print >> myfile}' $1

     
     