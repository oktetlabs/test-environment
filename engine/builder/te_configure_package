#! /bin/bash
#
# Test Environment Builder
#
# Script for the package configuring.
#
#
# Copyright (C) 2004 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author Elena A. Vengerova <Elena.Vengerova@oktetlabs.ru>
#
# $Id$
#

. builder.conf.processed

SCRIPT_DIR=`dirname $0`

KIND=$1
PACKAGE=$2
PKGNAME=$3
PLATFORM=$4
PKGSRC=$5
PREFIX=$6
AUTOTOOL_DONE=

# Call aclocal/autoheader/autoconf/automake
autotool()
{    
    if test -n "${AUTOTOOL_DONE}" ; then
        return
    fi
    pushd ${PKGSRC} >/dev/null
    echo "Calling aclocal/autoheader/autoconf/automake in `pwd`"
    aclocal -I ${TE_BASE}/auxdir || exit 1 ;
    if cat configure.ac | grep -q AC_CONFIG_HEADER ; then
        autoheader || exit 1 ;
    fi ;
    autoconf -Wall || exit 1 ;
    automake || exit 1 ;
    popd >/dev/null
    AUTOTOOL_DONE=yes
}

# Call configure and make
configure_package()
{
#    echo $PARMS | grep "\-\-host=" >/dev/null || PARMS="--host=linux $PARMS"

    echo ${PKGSRC}/configure -q --prefix=$PREFIX ${PARMS}

    TE_DEPENDENCIES="$DEPENDENCIES" \
    CFLAGS= \
    eval ${PKGSRC}/configure '-q --prefix=$PREFIX' ${PARMS}
}

# Create list of linked libraries and dependencies for the package
process_libs()
{
    PACKAGE_LIBS="`eval echo '$TE_BS_'${KIND}_${PKGNAME}'_LIBS'`"
    BUILD_LIBS="`eval echo '$'${PLATFORM}'_LIBS'`"
    LDADD=
    DEPENDENCIES=
    for l in $PACKAGE_LIBS ; do
        LDADD="$LDADD -l$l"
        for i in $BUILD_LIBS ; do
            if test "$i" = "$l" ; then
                if test "$KIND" = "TA" ; then
                    DEPENDENCIES="$DEPENDENCIES \$(DESTDIR)/\$(prefix)/../$PLATFORM/lib/lib${l}.a"
                else
                    DEPENDENCIES="$DEPENDENCIES \$(DESTDIR)/\$(prefix)/lib/lib${l}.a"
                fi
                break
            fi
        done
    done
}


if test "$KIND" = TA ; then
    cd agents
    PREFIX=$PREFIX/agents
    mkdir -p $TE_INSTALL/agents
else
    PREFIX=$PREFIX/$PLATFORM
fi

if test "$KIND" = LIB ; then
    cd lib
fi

if test "$KIND" = APP ; then
    cd engine
fi

if test "$KIND" = TOOL ; then
    cd tools
fi

mkdir -p $PKGNAME ;
cd $PKGNAME ;

if test -e Makefile ; then
    make install-data || exit 1
    exit 0
fi

if test ! -e ${PKGSRC}/configure ; then
    autotool
fi    

process_libs

PARMS="--with-name=$PACKAGE `eval echo '$'${PLATFORM}'_PARMS'` `eval echo '$TE_BS_'${KIND}'_'${PKGNAME}'_PARMS'`"

ADD_CPPFLAGS="`eval echo '$'${PLATFORM}'_CPPFLAGS'` `eval echo '$TE_BS_'${KIND}'_'${PKGNAME}'_CPPFLAGS'`"
ADD_CFLAGS="`eval echo '$'${PLATFORM}'_CFLAGS'` `eval echo '$TE_BS_'${KIND}'_'${PKGNAME}'_CFLAGS'`"
ADD_LDFLAGS="`eval echo '$'${PLATFORM}'_LDFLAGS'` `eval echo '$TE_BS_'${KIND}'_'${PKGNAME}'_LDFLAGS'`"

PACKAGE_CC="`eval echo '$'${PLATFORM}'_CC'`"
if test "$PACKAGE_CC" ; then
    PARMS="$PARMS CC=$PACKAGE_CC"
fi

if test "$KIND" != "TA" ; then
    ADD_CPPFLAGS="$ADD_CPPFLAGS -I${PREFIX}/include "
    ADD_LDFLAGS="$ADD_LDFLAGS -L${PREFIX}/lib "
fi
PARMS="$PARMS \
       TE_BASE=\"$TE_BASE\" \
       TE_M4=\"$TE_BASE/auxdir\" \
       TE_CPPFLAGS=\"${ADD_CPPFLAGS}\" \
       TE_CFLAGS=\"-O2 -ggdb -Wall -W ${ADD_CFLAGS} \" \
       TE_LDFLAGS=\"${ADD_LDFLAGS}\" \
       TE_LDADD=\"$LDADD\" \
       TE_PATH=\"$TE_PATH\" \
       TE_INSTALL=\"$TE_INSTALL\" \
       TE_PLATFORM=$PLATFORM"

configure_package

if test $? -ne 0 ; then
    if test x${TE_NO_AUTOTOOL} != "xyes" ; then
        autotool
        configure_package
        if test $? -ne 0 ; then
            exit 1
        fi
    else
        exit 1 ;
    fi
fi

make install-data || exit 1

exit 0
