/**

<!-- @page te_engine_tester Test Engine: Tester -->

@defgroup te_engine_tester Test Engine: Tester
@ingroup te_engine
@{

@section te_engine_tester_introduction Introduction

@ref te_engine_tester is an application of @ref te_engine that controls running tests
according to configuration files.

@image html ten_tester_context.png "Tester context in TE"

<!--
@startditaa "ditaa ten_tester_context.png -S"
                                  +-----------------+
 +---------------+   Build tests  | cGRE            |
 |    Builder    |<---------------+      Tester     |
 +---------------+                |                 |
                                  +--+-----------+--+
                                     |           |
                    +-------------+  |           | cfg_create_backup
                 +--| Package.xml |--+           | cfg_verify_backup
                 |  |     {d}     |              | cfg_restore_backup
                 |  +-------------+              v
                 |                     +--------------------+
                 | Run                 |  Configurator API  |
                 v                     +---------+----------+
          +-------------+                        | IPC
          |    Tests    |                        v
          +-------------+              +--------------------+
                                       |                    |
                                       |    Configurator    |
                                       |        {s}         |
                                       +--------------------+
@endditaa
-->

In the context of Test Environment tests are organized in groups
called Test Packages. From the Tester point of view, the Test Package is
a set of executables accompanied by a file @path{package.xml} describing how to
run these scripts (order, parameters, etc.).
A package may contain other packages.

It may be specified that some tests of the package should be run one-by-one
(a test is started after finishing the previous test) or simultaneously
(separate threads (processes) should be started for all the tests).
Moreover, a test may be started under a debugger
(@prog{gdb} or @prog{valgrind}).

It is possible to run the same test with different parameters. Parameters for
a test are specified in @path{package.xml} file. Tests may be iterated with
different combinations of parameter values. Such iterations are performed by
@ref te_engine_tester.

Some tests may be marked as (associated with) checking the particular
requirement(s) of the product. @ref te_engine_tester allows to run tests
checking a particular set of requirements.

@ref te_engine_tester may be asked to build the tests from sources.
In this case tests should be built using GNU tools
(@prog{make}/@prog{autoconf}/@prog{automake}).
All TE libraries used by the tests should be specified in the
@ref te_engine_builder configuration file and be built/installed before
@ref te_engine_tester starting.

@ref te_engine_tester is responsible for the error recovery.
It utilizes a service provided by @ref te_engine_conf to make a backup
configuration for each package and test and to restore backups if necessary.

@ref te_engine_tester utilizes logging facilities provided by
@ref te_engine_logger to log test/package starting and finishing events.
This information is then used by Report Generator to split the log to
sections corresponding to particular tests/packages.

XML schema for @ref te_engine_tester configuration file may be found in
@path{doc/xsd/tester_config.xsd} file.

@} <!-- END te_engine_tester -->
 */

