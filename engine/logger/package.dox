/**

@page te_engine_logger Test Engine: Logger

@section te_engine_logger_introduction Introduction

Logger provides an API for event logging to TE Subsystems, Test Agents and
tests (if Test Agent runs on an operating system with shared address space,
logging facilities may be provided to tested software as well).

Logger stores log messages in a binary file in raw format that can be later
converted to XML, HTML and plain text as well as filtered.

@section te_engine_logger_operation Operation

Logger exports two libraries:
- @ref loggerten, a library to use by components of TEN side;
- @ref loggerta, a library to use on Test Agent side.
.

@image html ten_logger_context.png "Logger context in TE"

<!--
@startditaa "ditaa ten_logger_context.png -S" 
 +-----------------------------------------------------------------+
 :                                                    Test Engine  |
 |                                                    -----------  |
 |  +--------------+      +---------------------+                  |
 |  |  Dispatcher  |      |   TEN components    |                  |
 |  |   Builder    |      +----------+----------+                  |
 |  +------+-------+                 |                             |
 |         |                         | Logging                     |
 |         | Logging                 v                             |
 |         v            +-------------------------+                |
 | +----------------+   | cPNK                    |<-----+         |
 | | cPNK           |   |  Logger API (TEN side)  |<---+ |         |
 | | te_log_message |   |      lib/loggerten      |<-+ | |         |
 | +-------+--------+   +------------+------------+  | | |         |
 |         |                         | IPC           | | |         |
 |         v                         v               | | | Logging |
 | +--------------+       +---------------------+    | | |         |
 | | c978         |       | cGRE                |    | | |         |
 | | Raw Log File |<------+       Logger        +----+ | |         |
 | |          {d} |       |                     |      | |         |
 | +--------------+       +----------+----------+      | |         |
 |                                   |                 | |         |
 |            +----------------------+                 | |         |
 |            | rcf_get_ta_list                        | |         |
 |            | rcf_ta_get_log                         | |         |
 |            v                                        | |         |
 | +---------------------+                             | |         |
 | |       RCF API       +-----------------------------+ |         |
 | +----------+----------+                               |         |
 |            |                                          |         |
 |            | IPC                                      |         |
 |            v                                          |         |
 | +---------------------+                               |         |
 | |         RCF         +-------------------------------+         |
 | +---+-----------------+                                         |
 |     |             ^                                             |
 +-----|-----=-------|---------------------------------------------+
       |             |
       |GET_LOG      | Log Data
       |             |
  +----|-------------|--------------------------------------------+
  |    |             |                                Test Agent  |
  |    |             |                                ----------  |
  |    v             |                  +----------------------+  |
  |  +---------------+-+  ta_log_get    | cPNK                 |  |
  |  |     RCF PCH     +------------- ->| Logger API (TA side) |  |
  |  +-----------------+                |     lib/loggerta     |  |
  |                                     +----------------------+  |
  |                                                ^              |
  |                                                |              |
  |                                                | Logging      |
  |                                    +-----------+------------+ |
  |                                    | Test Agent components  | |
  |                                    +------------------------+ |
  +---------------------------------------------------------------+
@endditaa
-->

Logger passively accumulates log messages in raw log file when they are
generated by Test Engine components by means of Logger API.
From the other hand log messages generated in Test Agent context accumulated
on Test Agent side by Logger Test Agent library until Logger asks for a bulk
of messages (via @c RCFOP_GET_LOG RCF operation).

Each Test Agent is polled by Logger in regular time intervals in order to
gather accumulated log messages (bulk of messages).
Polling interval can be configured for each Test Agent in Logger
configuration file. XML schema for Logger configuration file can be found at
<em>doc/xsd/logger_config.xsd</em>.

Even though Logger exports two libraries - for Test Engine side and
Test Agent side, from users point of view there is no difference which
library is in use because external API defined in include/logger_api.h
hides all the differences.

Logger defines a number of log levels that gradate log messages by
their importance. According to log levels Logger exports a number of macros
to be used by any TE entity. These macros have printf-like arguments
(format string and format arguments):
- ERROR() - errors and faults;
- WARN() - warnings;
- RING() - significant events;
- INFO() - informational;
- VERB() - verbose;
- ENTRY() - function entry point;
- EXIT() - function exit.
.

Log level is a compile-time value â€“ low log level leads to removing macro
calls by the pre-processor. ERROR, WARN and RING are enabled by default.

Apart from C function API, Logger provides script-based mechanism for logging
to use by Dispatcher and Builder. This interface is necessary to support logging
during initialization (when TEN components haven't been started yet).
 
 */
