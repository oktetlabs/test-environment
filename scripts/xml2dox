#! /usr/bin/awk -f

# This script extracts comments from a `package.xml' file and converts them
# to the form suitable for Doxygen processing

function objective_handle(str)
{
    if (sub(/@objective/, str)) {
        in_objective = 1;
        objective = ""
    }

    if (in_objective) {
        # if we were in objective - it's time to leave
        if (!match(str, /@objective/) && (match(str, /@/) || match(str, /<run/))) {
            gsub(/ [ ]+/, " ", objective);
            printf("@objective %s\n", objective);
            in_objective = 0;
            objective = "";
        }
    }

    if (in_objective) {
        objective_line = str;
        gsub("<!---", "", objective_line);
        gsub("@objective ", "", objective_line);
        gsub(" *[\n]+$", "", objective_line);
        objective = objective " " objective_line;

        next
    }
}

function process(str)
{
    if (sub(/-->.*/, " ", str))
        in_dox_comment = 0;
    else
        in_dox_comment = 1;

    if (sub(/@page/, str)) {
        if (in_page) {
            if (run_found) {
                print ""
                printf("RUN NAME: %s\n", run_name);
            }
            print "*/";
        }

        print "/**";
        in_page = 1;

        run_found = 0;
    }

    if (in_dox_comment) {
        objective_handle(str)
    }

    print str;

    return;
}

in_dox_comment && /^[[:space:]]*\*/ { sub(/^[[:space:]]*\*/, ""); }

/<!---/ {
    line = $0;
    gsub("<!--- ", "", $line);
    process($line);

    next;
}

in_dox_comment {
    objective_handle($0)
}

in_dox_comment && /-->/ {
    sub(/.*-->.*/, "\n");
    if ($0)
        print;
    in_dox_comment = 0;
    next;
}

in_dox_comment { print $0; next }

/<enum name/ {
  sub(/.*<enum/, "\nName: ");
  sub(/ name="/, "");
  sub(/">/, "\n\nValues: \n");

  in_enum = 1;

  print $0;
  next;
}

in_enum && /<value/ {
  sub(/<\/value>/, ",");
}

in_enum && /req=/ {
  sub(/.*req="/, "-# (req=");
  sub(/">/, ") ");
  print $0;
  next;
}

in_enum && /<value/ {
  sub(/.*>/, "-# ");
  print $0;
  next;
}

/<\/enum>/ {
  sub(/<\/enum>/, "");

  in_enum = 0;
  print $0;
  next;
}

/<run name/ {
    if (in_page && ! run_logged) {
        run_name = $0
        gsub(" .*<run name=\"", "", run_name);
        gsub("\".*>", "", run_name);
        run_found = 1;
    }
}

in_run && /<\/run>/ {
    in_run = 0;
}

END { print "*/"; }
