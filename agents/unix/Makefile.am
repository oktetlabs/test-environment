SUBDIRS=rpc conf

ACLOCAL_AMFLAGS = -I $(TE_M4)

AM_CPPFLAGS = -I$(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/include \
              $(TE_CPPFLAGS) \
              $(EXTRA_CPPFLAGS) \
              $(TE_CPPFLAGS_VAR)

AM_CFLAGS = -fno-strict-aliasing $(TE_CFLAGS) \
            $(TE_CFLAGS_VAR)

AM_LDFLAGS = -L$(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib \
             -Wl,-Bstatic $(TE_LDFLAGS)


# This is a bit hackish, because LIBS should not normally contain
# linker flags, but this particular flag should be included
# _after_ all libraries, or else there would be linking errors
# with libgcc.a,
if !GENERATE_SYMTBL
export_all = -Wl,-whole-archive -Wl,-export-dynamic
unexport_all = -Wl,-no-whole-archive
else
export_all =
unexport_all =
endif

LIBS = $(export_all) @LIBS@ $(unexport_all)


taexecdir=$(prefix)/@with_name@

noinst_HEADERS = unix_internal.h

taexec_PROGRAMS = ta

ta_SOURCES = main.c log_remote.c aux_threads.c
if GENERATE_SYMTBL
nodist_ta_SOURCES = symtbl.c
# symtbl.c should _not_ build declared as BUILT_SOURCES,
# because it depends on libraries that are built _after_
# the sources declared as `built` are generated by Automake
# ! BUILT_SOURCES = $(nodist_ta_SOURCES)
endif

ta_LDADD = conf/libconf.a rpc/libtarpc.a -lrcfpch \
           -l$(TAD) $(TE_LDADD) \
           -lrpcxdrta -lrpc_types -lloggerta -lrpctransport \
		   -ltools -lagentlib \
           $(EXTRA_LDADD) \
           -lconf_oid

SYMTBL_OBJECTS = main.o log_remote.o
SYMTBL_LIBS = $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libtools.a \
              $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/librcfpch.a \
			  $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libagentlib.a \
              $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/lib$(TAD).a \
              conf/libconf.a rpc/libtarpc.a

if ISCSI_TARGET_USE
SYMTBL_LIBS+=\
$(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libiscsi_unh_target.a
endif      

if CFG_SNIFFERS_DUMMY
ta_LDADD+= -lrcf_sniffers_dummy
endif

SYMTBL_LIBS+=@CURL_LIB@

SYMTBL_LIBS+=@DPDK_LIBS@

# Changing variables in the 'Makefile' will be found using
# the dependence on the 'Makefile'
ta_DEPENDENCIES = @TE_DEPENDENCIES@ $(SYMTBL_LIBS) \
    $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/librpcxdr.a \
    $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/librpc_types.a \
    $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libconf_oid.a \
    $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libloggerta.a \
    Makefile

if CFG_TR069
ta_DEPENDENCIES += $(DESTDIR)/$(prefix)/../$(TE_PLATFORM)/lib/libacse_cwmp.a
SYMTBL_OBJECTS += $(TE_BUILD)/lib/acse/acse_rpc.o 
endif

if GENERATE_SYMTBL
CLEANFILES = symtbl.c

symtbl.c: $(SYMTBL_OBJECTS) $(SYMTBL_LIBS) @TE_DEPENDENCIES@
	$(NM) $^ | \
	awk --posix -vTABLE_NAME=generated_table -f $(srcdir)/../../engine/builder/te_generate_symtbl >$@
endif

ta_SOURCES += rcf_consistency_checks.c

.PHONY: rcf_consistency_checks.c
rcf_consistency_checks.c:
	TE_BASE="@TE_BASE@" \
	TE_BUILD="@TE_BUILD@" \
	"@TE_BASE@/engine/builder/te_rcf_consistency_checks" \
		--generate-c >$@
