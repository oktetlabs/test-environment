/**

@page te_lib_rpc Remote Procedure Calls (RPC)

@section te_lib_rpc_introduction Introduction

In the context of TE, Remote Procedure Calls functionality provides the ability to invoke a function on a Test Agent side.
It can be obvious, but anyway it is worth nothing that in order to call a function on Test Agent a special action
shall be done to tell Agent to treat that function as a function for RPC calls. I.e. RPC does not allow any function on Test Agent to be called,
but only a set of functions that were told to be RPC aware.

On Test Engine side RPC functionlity is exported by RCF RPC library: @ref rcfrpc,
but end users should utilize and if necessary enhance upper layer API exported by @ref tapi_rpc

Here is the diagram of libraries and TE components that take part in RPC data flow:

@image html te_lib_rpc_context.png "Remote Procedure Call context in TE"

<!--
@startditaa "ditaa te_lib_rpc_context.png -S"

+-------------------------------------------------------------------------------------+
:                           +--------------------+               Test Process Context |
|           +---------------+       Tests        |               -------------------- |
|           |               +---------+----------+                                    |
|           |                         |                                               |
|           |                         | do RPC call                                   |
|           |                         v                                               |
|           |               +--------------------+                                    |
|           |create/delete  |cYEL  TAPI RPC      |                                    |
|           | RPC server    |    lib/tapi_rpc    |                                    |
|           |               +---------+----------+                                    |
|           |                         |                                               |
|           |                         | rcf_rpc_call                                  |
|           |                         v                                               |
|           |               +--------------------+                 +---------------+  |
|           |               |cGRE                | Encode/decode   |               |  |
|           +------------ ->|      RCF RPC       +-------------- ->|    RPC XDR    |  |
|                           |     lib/rfcrpc     |                 |   lib/rpcxdr  |  |
|                           +--+--------------+--+                 +-------+-------+  |
|                              |              |                            |          |
|            +-----------------+              +--------+                   v          |
|            | add/del/get/set                         |            +-------------+   |
|            | "/agent/rpcserver"                      |            |             |   |
|            | "/rpc_server_sid"                       |            |   SUN RPC   |   |
|            v                                         |            |   lib/rpc   |   |
| +----------------------+                             |            +-------------+   |
| |   Configurator API   |                             |                              |
| |    lib/confapi       |                             |                              |
| +----------+-----------+                             | rcf_send_recv_msg            |
+------------|----------------------------+            |                              |
             | IPC                        :            |                              |
             v                            |            |                              |
  +----------------------+                |            |                              |
  |cEDB                  |                |            |                              |
  |     Configurator {s} |                |            |                              |
  +----------------------+                |            |                              |
             |                            |            |                              |
             | cfg_add/cfg_del            |            |                              |
             | cfg_get/cfg_set            |            |                              |
             v                            |            v                              |
  +---------------------------------------------------------------+                   |
  |cGRE                       RCF API                             |                   |
  |                          lib/rcfapi                           |                   |
  +-----------------------------+---------------------------------+                   |
                                |         |                                           |
                                | IPC     +-------------------------------------------+
                                v
  +----------------------------------------------------------------+
  |cEDB                        RCF                                 |
  +-----------------------------+----------------------------------+
                                |                                   
 :                              |                 Test Engine side  :
 +------------------------------|-----------------------------------+
 :                              |                 Test Agent side   :
                                |
                                |
                      +---------|---------+
                      |         v         |
                      |  +-------------+  |
                      |  |   RCF PCH   |  |                          
                      |  |  lib/rcfpch |  |
                      |  +-------------+  |
                      |                   |
                      |    Test Agent     |
                      +-------------------+

  +----------------------------------------------+
  :  +------+                                    |
  |  |cYEL  | -- To be updated for new RPC calls |
  |  +------+                                    |
  |                                              |
  |  +------+                                    |
  |  |cEDB  | -- Test Engine Processes           |
  |  +------+                                    |
  |                                              |
  |  IPC      -- Inter Process Communication     |
  +----------------------------------------------+

@endditaa
-->

RCF RPC library is actually reside at the same layer as RCF API library,
but it is selected to a dedicated library just to split it on functionality basis.

@section te_lib_rpc_server RPC Server

Any RPC call is done in the context of RPC Server. RPC Server is a separate process or
thread on Test Agent side in which context a function call is done. From Test code point of view
RPC Server is represented by rcf_rpc_server data structure and it is associated with a pair of
names - Test Agent name and RPC Server name (this pair of names are used in configurator tree to
identify RPC Server).

In order to create or delete an RPC Server, functions from RCF RPC library should be used:

- rcf_rpc_server_create() - to create an RPC Server with particular name on the particular Test Agent;
- rcf_rpc_server_destroy() - to destroy an RPC Server.
.

Creating and deleting an RPC Server is done via Configurator management tree. On Test Agent side this causes
RCF PCH library to pass control to corresponding configuration model handlers - <b>/agent/rpcserver</b> node.

When a new RPC Server is being created Test Agent creates a new thread or process (depending on the desired location of RPC server).
Please note that to create an RPC Server in thread context you will first need to create an RPC Server in a process context
and only then you can create another RPC Server as a thread of that previously created process context RPC Server.

Each RPC Server has its own communication link with Test Agent process. On RPC Server start-up it connects to Test Agent in order to set-up that communication link.

@image html te_lib_rpc_server_context.png "Test Agent and RPC Server context"

<!--
@startditaa "ditaa te_lib_rpc_server_context.png -S"
                                             +-------------------------+
                                             | RPC Server Process      |
 +-----------------------+       +-------- ->| Name #A                 |
 |                       |       |           | Parent -                |
 |  Test Agent Process   |<------+           +-------------------------+
 |                       |       |
 +-----------------------+       |  pipes    +-------------------------+
                                 | sockets   | RPC Server Process      |
                                 |           | Name #B                 |
                                 |           | Parent -                |
                                 +-------- ->|                         |
                                 |           |  +-------------------+  |
                                 |           |  | RPC Server Thread |  |
                                 +----------- ->| Name #C           |  |
                                             |  | Parent #B         |  |
                                             |  +-------------------+  |
                                             +-------------------------+
@endditaa
-->

There are the following functions available for creating RPC Server in different contexts:
- rcf_rpc_server_create();
- rcf_rpc_server_thread_create();
- rcf_rpc_server_fork();
- rcf_rpc_server_fork_exec();
- rcf_rpc_server_create_process();
.

Each RPC Server can be switched to use a particular dynamic library on function name resolution during RPC call operation. To change dynamic library name the following function: 
- rcf_rpc_setlibname().

Once you have an RPC Server handle you are ready to do RPC call by means of the following function:
- rcf_rpc_call().

For more information on function exported by RCF RPC library refer to <A HREF="rcf__rpc_8h.html">RCF RPC API</A>.

@section te_lib_rpc_tapi TAPI for RPC

Test code should not use rcf_rpc_call() function directly, but instead it shall use functions exported by @ref tapi_rpc.

 */
