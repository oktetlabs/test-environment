#! /bin/bash
#
# Test Environment Builder
#
# Script for calculation ta_signature for local or remote host
#
# Copyright (C) 2015 Test Environment authors (see file AUTHORS
# in the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public.
# License along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
# Author Oleg Sadakov <Oleg.Sadakov@oktetlabs.ru>
#
# $Id$
#

usage()
{
cat <<EOF
Usage: get_te_signature [<generic options>]
Generic options:
  --cc=<CC>             Compiler with flags (default: "cc").
  --host=<HOST>         Remote host for signature calculation.
                        Calculation is performed locally if it is missing.
  --te-base=<TE_BASE>   Path to TE source directory.
                        Current directory will be used as default directory
                        if environment variable TE_BASE is not defined
  --help, -h            Display this help message and exit.

EOF
}

#
# Process script options
#
process_opts()
{
    for opt ; do
        case "$opt" in
            --cc=* )        CC="${1#--cc=}" ;;
            --host=* )      HOST="${1#--host=}" ;;
            --te-base=* )   TE_BASE="${1#--te-base=}" ;;

            -h | --help )
                usage
                exit 0
                ;;

            *)  echo "Unknown option: $1" >&2;
                usage
                exit 1
                ;;
        esac
    done
}

# Set default values
CC=cc
HOST=
if test -z "${TE_BASE}" ; then
    TE_BASE=$(dirname "$(readlink -f "$(which $0)")")
fi

process_opts "$@"

if ! test -f "$TE_BASE/engine/builder/te_functions" ; then
    echo "Cannot find TE scripts - exiting." >&2
    exit 1
fi

. "$TE_BASE/engine/builder/te_functions"

# Calculate signature
if test -z "$HOST" ; then
    te_ta_signature_local "$CC"
else
    te_ta_signature "$HOST" "$CC"
fi
