#################################
## OKTET Labs. Test Environment #
#################################

OKTET Labs Test Environment (TE) is a software product that is intended to
ease creating automated test suites. The history of TE goes back to 2000
year when the first prototype of software was created. At that time the
product was used for testing SNMP MIBs and CLI commands. Two years later (in
2002) software was extended to support testing of IPv6 protocol.

Table of Contents
=================

1. Documentation
2. Build
2.1 Dependencies
2.2 External Libraries
3. BASH-completions

1. Documentation
================

TE has two types of documentation.

1. Autogenerated doxygen documentation. Is built with 

$ ./gen_doxygen

script which is located in the top directory. Most of doxygen versions you
can find in real life are supported.

The documentation can be then found at doc/generated/html/

Doxygen warnings can be found in ./doxygen.warn file.

Some pictures require 'ditaa' to be installed.

2. Static documents. Can be found in doc/ folder. May be outdated -- check
doxygen documentation first.

2. Build
========

TE build is described in details in the generated documentation.

First thing to do:

export TE_BASE=<TE SOURCES DIR>

Briefly:
  * if you build standalone TE (no external test suite) you should call
    $ ./dispatcher.sh
    and wait till the buid is complete;
  * if you build a test suite -- go there and execute
    $ ./run.sh
    which will do pretty much the same as dispatcher.sh, but also build the
    test suite libraries and tests.

2.1 Dependencies
~~~~~~~~~~~~~~~~

The following packages are required to build and run.

 - gcc, make, sed and other standard development tools
 - autoconf 2.61
 - automake 1.9.6 (note: 1.10.* does not work -- sorry for inconvenience)

Engine (in [] brackets - debian package names)
----------------------------------------------

- libxml2-devel at least 2.6.x (2.6.10) [libxml2 libxml2-dev]
- glib2-devel (glib-2.0 package we use 2.4.8) [libglib2-dev]
- popt-devel (libpopt-dev on Debian) [libpopt-dev]
- libreadline (for tester interactive) [libreadline-common,
  libreadline-dev, libreadline-5]
- tcl (and tcl-devel, if applicable, e.g. on Fedora Core 2) [tcl, tcl-dev]
- libxslt (we use 1.1.6) [libxslt1-dev, libxslt-1.1]
- libexpat [libexpat1, libexpat1-dev]
- flex >= 2.5.31-31 from sourceforge; flex 2.5.4a from
  gnu.org will not work [flex]
- gawk (mawk will not work) [gawk]
- any curses library (ncurses will work) with development
  files [ncurses, ncurses-dev]
- perl-Time-HiRes package on Redhat/Fedora is very usefull (it allows to
  avoid mixture in log because of unprecise timestamps in messages
  logged by Dispatcher (via logging script))
- libgss0 (>=0.0.18) [libgss0]
- Wireless tools - development files [libiw-dev]
- PPPoE [pppoe] [pppoeconf]
- curl libraries [not from debian, should be taken from storage]
- libusb, libusb-dev
- libpam0g-dev
- libperl-dev
- bison

Engine works only on Linux!

Unix Test Agent
---------------

- expect and expect-dev (for TAD CLI only) [expect, expect-dev]
- flex >= 2.5.31 from sourceforge; flex 2.5.4a from gnu.org does not work
- libexpat
- libpcap0.8-dev (for TAD PCAP only) [libpcap0.8-dev]
- libpam (0.76-22) (not required but suggested) [libpam]

For SNMP support:
- libsnmp-dev

We are using versions of libraries specified in parentheses.

Windows Test Agent
------------------

- cygwin cross-toolchain
- libpcap (crosscompiled for cygwin). Should be put into standard
  include/lib paths of cygwin cross-compiler - required for TAD library.
  Winpcap runtime has to be installed on Windows host.

 
Linux dependencies in 1 line (Debian packages):

libxml2-dev (>= 2.6.10), libglib2.0-dev, libpopt-dev, libreadline-dev |
libreadline5-dev (>= 5.0), tcl-dev, libxslt1-dev (>= 1.1.6), libexpat1-dev,
flex (>= 2.5.31), gawk, ncurses-dev, libgss3 | libgss0 (>= 0.0.18),
libiw-dev, pppoe, pppoeconf, libusb-dev, libpam0g-dev, autoconf (>= 2.61),
automake1.9, bison, libxml-parser-perl

Unix Test Agent dependencies in 1 line (Debian packages):

make, gawk, pkg-config, gcc, g++, bison, flex (>= 2.5.31).

Unix Test Agent dependencies in 1 line (Redhat/CentOS packages):

make, gawk, pkg-config, gcc, g++, bison, flex (>= 2.5.31), glibc-static.

Autoupdate configure.ac
-----------------------

To update the configure.ac, you can use the autoupdate tool.

Note: After execution autoupdate tool required version (AC_PREREQ) will be
installed to the current autoconf version. Then it should be reduced to the
lowest possible version.


2.2 External libraries
~~~~~~~~~~~~~~~~~~~~~~

External libraries may be specified by TE_EXT_LIBS macro in builder.conf
(see comments to macro in engine/builder/builder.m4).

TE_EXT_LIB enviroment variable should be set to 
http://oktetlabs.ru/~tester/te.

External libraries should be placed to 
http://oktetlabs.ru/~tester/te/<platform>,
e.g. http://oktetlabs.ru/~tester/te/i686-pc-linux-gnu.

Labraries should be *.tgz archieves that may contain lib/ and include/ 
directories. They are simply unpacked to installation directory of the 
corresponding platform.

BASH-completion
===============

If you want to use BASH-completion with TE scripts, add in your
~/.bash_completion file or any appropriate place:

complete -F _configure_func $default ./dispatcher.sh ./run.sh

