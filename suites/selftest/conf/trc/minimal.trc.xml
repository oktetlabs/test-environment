<?xml version="1.0"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright (C) 2019-2022 OKTET Labs Ltd. All rights reserved. -->
<test name="minimal" type="package">
    <objective>Package for demonstrating minimal tests</objective>
    <iter result="PASSED">
        <test name="helloworld" type="script">
            <objective/>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="artifact" type="script">
            <objective/>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="mi_meas_line_graph" type="script">
            <objective>Demo of using line-graph views with MI measurement artifacts</objective>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="mi_meas_highrange" type="script">
            <objective>Demo of using line-graph views with high-range measurements.</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="n_values" />
                <notes/>
            </iter>
        </test>
        <test name="mi_meas_multipliers" type="script">
            <objective>Demo of using all possible measurement multipliers.</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="n_values" />
                <notes/>
            </iter>
        </test>
        <test name="verdict" type="script">
            <objective/>
            <notes/>
            <iter result="PASSED">
                <notes/>
                <results tags="tag1">
                    <result key="key 1" notes="Expected result with tag1" value="PASSED">
                        <verdict>Test verdict 1</verdict>
                        <verdict>Test verdict 2</verdict>
                    </result>
                    <result notes="FAILED is also accepted when tag1 is enabled"
                            key="key 2" value="FAILED"/>
                </results>
                <results tags="tag_set_by_prologue">
                    <result key="key 3" notes="Expected result" value="PASSED">
                        <verdict>Test verdict 1</verdict>
                        <verdict>Test verdict 2</verdict>
                    </result>
                </results>
            </iter>
        </test>
        <test name="env" type="script">
            <objective>Get the environment</objective>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT},if:'iut_if'}}</arg>
                <notes/>
            </iter>
        </test>
        <test name="parameters" type="script">
            <objective>Test that various types of parameters are properly handled.</objective>
            <iter result="PASSED">
                <arg name="str_param" />
                <arg name="int_param" />
                <arg name="uint_param" />
                <arg name="uint64_param" />
                <arg name="dbl_param" />
                <arg name="unit_param" />
                <arg name="bin_unit_param" />
                <arg name="true_param" />
                <arg name="false_param" />
                <arg name="opt_str_none_param" />
                <arg name="opt_str_val_param" />
                <arg name="opt_uint_none_param" />
                <arg name="opt_uint_val_param" />
                <arg name="opt_uint64_none_param" />
                <arg name="opt_uint64_val_param" />
                <arg name="opt_dbl_none_param" />
                <arg name="opt_dbl_val_param" />
                <arg name="opt_unit_none_param" />
                <arg name="opt_unit_val_param" />
                <arg name="opt_bin_unit_none_param" />
                <arg name="opt_bin_unit_val_param" />
                <arg name="opt_bool_none_param" />
                <arg name="opt_bool_false_param" />
                <arg name="opt_bool_true_param" />
                <arg name="good_result" />
                <arg name="good_result_noprefix" />
                <arg name="good_int_result" />
                <arg name="bad_result" />
                <arg name="bad_result_nomodule" />
                <arg name="bad_result_output" />
                <arg name="bad_int_result" />
                <notes/>
            </iter>
        </test>

        <test name="args_from_session_tmpl" type="script">
            <objective>Testing default arguments correctness</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="test_arg1">111</arg>
                <arg name="test_arg2">100</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">111</arg>
                <arg name="test_arg2">200</arg>
            </iter>
        </test>
        <test name="args_from_session_and_script_tmpl" type="script">
            <objective>Testing default arguments correctness</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="test_arg1">99</arg>
                <arg name="test_arg2">100</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">99</arg>
                <arg name="test_arg2">200</arg>
            </iter>
        </test>
        <test name="all_defs_in_tmpl" type="script">
            <objective>Testing default arguments correctness</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="test_arg1">456</arg>
                <arg name="test_arg2">7</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">456</arg>
                <arg name="test_arg2">8</arg>
            </iter>
        </test>
        <test name="overwrite_script_and_arg" type="script">
            <objective>Testing default arguments correctness</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="test_arg1">777</arg>
                <arg name="test_arg2">5</arg>
            </iter>
        </test>
        <test name="overwrite_arg_set_script" type="script">
            <objective>Testing default arguments correctness</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="test_arg1">3</arg>
                <arg name="test_arg2">100</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">3</arg>
                <arg name="test_arg2">200</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">4</arg>
                <arg name="test_arg2">100</arg>
            </iter>
            <iter result="PASSED">
                <arg name="test_arg1">4</arg>
                <arg name="test_arg2">200</arg>
            </iter>
        </test>

        <test name="compound_params" type="script">
            <objective>Test that compound parameters are properly handled.</objective>
            <iter result="PASSED">
                <arg name="fields">
                    <field name="first">First</field>
                    <field name="second">Second 1</field>
                    <field name="second">Second 2</field>
                </arg>
                <arg name="multiple">
                    <field>Multiple 1</field>
                    <field>Multiple 2</field>
                </arg>
                <arg name="boolean" />
                <arg name="states" />
                <arg name="enum" />
                <arg name="check_enum" />
                <arg name="simple" />
            </iter>
        </test>
        <test name="multi_line_indent" type="script">
            <objective>Check that indentation of multi-line is stripped correctly by TE.</objective>
            <iter result="PASSED">
                <arg name="test_line"/>
                <notes/>
            </iter>
        </test>
    </iter>
</test>
