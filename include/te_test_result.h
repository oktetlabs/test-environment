/** @file
 * @brief Test Environment
 *
 * Test result representation.
 *
 *
 * Copyright (C) 2006 Test Environment authors (see file AUTHORS
 * in the root directory of the distribution).
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA  02111-1307  USA
 *
 *
 * @author Andrew Rybchenko <Andrew.Rybchenko@oktetlabs.ru>
 *
 * $Id$
 */

#ifndef __TE_TEST_RESULT_H__
#define __TE_TEST_RESULT_H__

#include "te_queue.h"

#ifdef __cplusplus
extern "C" {
#endif

/**
 * Statuses of test execution.
 */
typedef enum te_test_status {
    TE_TEST_INCOMPLETE, /**< Test execution has not been finished yet */
    TE_TEST_EMPTY,      /**< Session is empty */
    TE_TEST_SKIPPED,    /**< The test is skipped because of target
                             requirements specified by user */
    TE_TEST_FAKED,      /**< Test execution is just faked by the Tester */
    TE_TEST_PASSED,     /**< Discovered IUT behaviour is correct from
                             the test point of view */
    TE_TEST_SEARCH,     /**< Test to be executed is not found */
    TE_TEST_CONF,       /**< Unexpected configuration changes after
                             test execution */
    TE_TEST_KILLED,     /**< Test application is killed by some signal */
    TE_TEST_CORED,      /**< Test application is killed by SIGSEGV
                             signal and dumped core into a file */
    TE_TEST_FAILED,     /**< Discovered IUT behaviour is incorrect
                             from test point of view or some internal
                             error occur */
    TE_TEST_PROLOG,     /**< Session prologue is failed */
    TE_TEST_EPILOG,     /**< Session epilogue is failed */
    TE_TEST_KEEPALIVE,  /**< Session keep-alive validation is failed */
    TE_TEST_EXCEPTION,  /**< Session exception handler is failed */
} te_test_status;

/**
 * Verdict generated by the test during execution.
 */
typedef struct te_test_verdict {
    TAILQ_ENTRY(te_test_verdict)    links;  /**< Links to create queue
                                                 of verdicts */
    char                           *str;    /**< Verdict string */
} te_test_verdict;

/**
 * Test result representation: status plus verdicts.
 */
typedef struct te_test_result {
    te_test_status                  status;     /**< Status of the test
                                                     execution */
    TAILQ_HEAD(, te_test_verdict)   verdicts;   /**< Verdicts generated
                                                     by the test during
                                                     execution */
} te_test_result;


/** Initialize test result by defaults. */
static inline void
te_test_result_init(te_test_result *result)
{
    result->status = TE_TEST_INCOMPLETE;
    TAILQ_INIT(&result->verdicts);
}

#ifdef __cplusplus
} /* extern "C" */
#endif
#endif /* !__TE_TEST_RESULT_H__ */
