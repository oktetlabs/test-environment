<?xml version="1.0" ?>
<backup>

    <!-- This configuration model is intended for describing of
         RADIUS Server configuration -->

    <!--
        Copyright (C) 2005 Test Environment authors (see file AUTHORS
        in the root directory of the distribution).

        Test Environment is free software; you can redistribute it
        and/or modify it under the terms of the GNU General Public
        License as published by the Free Software Foundation; either
        version 2 of the License, or (at your option) any later
        version.
        
        Test Environment is distributed in the hope that it will be
        useful, but WITHOUT ANY WARRANTY; without even the implied
        warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        PURPOSE. See the GNU General Public License for more details.
        
        You should have received a copy of the GNU General Public
        License along with this program; if not, write to the Free
        Software Foundation, Inc., 59 Temple Place, Suite 330,
        Boston, MA  02111-1307  USA
        
        Author: Artem Andreev E-mail: Artem.Andreev@oktetlabs.ru
        Author: Oleg Kravtsov E-mail: Oleg.Kravtsov@oktetlabs.ru
    -->


    <!-- Root object of RADIUS Server configuration.
         Name: Empty
         Value: 0 (disabled) or 1 (enabled) -->
    <object oid="/agent/radiusserver" access="read_write" type="integer"/>
    
    <!-- RADIUS Authentication port number.
         Name: Empty
         Value: UDP port -->
    <object oid="/agent/radiusserver/auth_port" access="read_write"
            type="integer"/>

    <!-- RADIUS Accounting port number.
         Name: Empty
         Value: UDP port -->
    <object oid="/agent/radiusserver/acct_port" access="read_write"
            type="integer"/>

    <!-- Network address RADIUS server is bound to.
         Name:  Empty
         Value: Wildcard address if the Server listens on all addresses -->
    <object oid="/agent/radiusserver/net_addr" access="read_write"
            type="address"/>

    <!-- RADIUS clients configuration (usually client is a NAS).
         Name: IP address of RADIUS Client 
         Value: None -->
    <object oid="/agent/radiusserver/client" access="read_create"
            type="none"/>

    <!-- The shared secret between the NAS and RADIUS Server,
         which is used to "encrypt" and "sign" packets between
         the NAS and RADIUS Server.
         Name: Empty
         Value: Shared secret -->
    <object oid="/agent/radiusserver/client/secret" access="read_write" 
            type="string"/>
    
    <!-- RADIUS users configuration.
         Name: User name
         Value: 0 (Reject this user unconditionally),
                1 (Accept this user if authenticated) -->
    <object oid="/agent/radiusserver/user" access="read_create"
            type="integer"/>
    
    <!-- A set of attributes that should be checked for this user.
         Name: empty
         Value: a list of attributes in format:
                [AttributeName=Value[,AttributeName=Value]*] -->
    <object oid="/agent/radiusserver/user/check" access="read_write"
            type="string"/>
    
    <!-- A set of attributes that should be included into
        Access-Challenge RADIUS message sent to this user.
         Name: empty
         Value: a list of attributes in format:
                [AttributeName=Value[,AttributeName=Value]*] -->
    <object oid="/agent/radiusserver/user/challenge-attrs" access="read_write"
            type="string"/>

    <!-- A set of attributes that should be included into
        Access-Accept RADIUS message sent to this user.
         Name: empty
         Value: a list of attributes in format:
                [AttributeName=Value[,AttributeName=Value]*] -->
    <object oid="/agent/radiusserver/user/accept-attrs" access="read_write"
            type="string"/>
            
    <!-- Root object of the supplicant daemon (XSupplicant assumed)
         Name: empty
         Value: 0 (disabled) or 1 (enabled)
    -->
    <object oid="/agent/supplicant" access="read_write" type="integer" />

    <!-- A collection of network interfaces XSupplicant will use 
         Name: interface name
         Value: none
    -->
    <object oid="/agent/supplicant/interface" access="read_create" type="none" />

    <!-- The following three are hooks that are executed by XSupplicant 
         at startup, after the first authentication and after the re-authentication resp.
         QUESTION: do we really need these? Or rather some appropriate values should
         be hardcoded into TA?
    -->
    <object oid="/agent/supplicant/startup-command" access="read_write" type="string" />
    <object oid="/agent/supplicant/first-auth-command" access="read_write" type="string" />
    <object oid="/agent/supplicant/reauth-command" access="read_write" type="string" />

    <!-- The network description for XSupplicant.
         QUESTION: do we need multiple networks? 
         If not, then the name of this node shall be empty, and the value
         shall be the name of the network.
         If yes, then the value will be empty, and the name will be actual name
    -->
    <object oid="/agent/supplicant/network" access="read_write" type="string" />
<!-- OR:
    <object oid="/agent/supplicant/network" access="read_create" type="none" />
-->
    <!-- Network identity for XSupplicant 
         Name: empty
         Value: identity string
    -->
    <object oid="/agent/supplicant/network/identity" access="read_write" type="string" />

    <!-- QUESTION: do we need various EAP flavors or just EAP-MD5?
         If we actually do, the following need to be augemented.
    -->

    <!-- Username for XSupplicant 
         Name: empty
         Value: username for EAP-MD5
    -->
    <object oid="/agent/supplicant/network/username" access="read_write" type="string" />

    <!-- Password for XSupplicant 
         Name: empty
         Value: password for EAP-MD5
    -->
    <object oid="/agent/supplicant/network/password" access="read_write" type="string" />
</backup>
