a<?xml version="1.0"?>
<backup>
    <!-- This configuration is intended for describing of
         Certifificate Store -->

    <!--
        Copyright (C) 2017 Test Environment authors (see file AUTHORS
        in the root directory of the distribution).

        Test Environment is free software; you can redistribute it
        and/or modify it under the terms of the GNU General Public
        License as published by the Free Software Foundation; either
        version 2 of the License, or (at your option) any later
        version.

        Test Environment is distributed in the hope that it will be
        useful, but WITHOUT ANY WARRANTY; without even the implied
        warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        PURPOSE. See the GNU General Public License for more details.

        You should have received a copy of the GNU General Public
        License along with this program; if not, write to the Free
        Software Foundation, Inc., 59 Temple Place, Suite 330,
        Boston, MA  02111-1307  USA

        Author: Svetlana Fishchuk <Svetlana.Fishchuk@oktetlabs.ru>
    -->

    <!-- Certificate store entries
         Name: user-friendly name for store entry -->
    <object oid="/crypt/cert" access="read_create" type="none" />

    <!-- Entry status
         Value: 0 - entry is in "idle" state,
                1 - entry should be either propagated or generated -->
    <object oid="/crypt/cert/status" access="read_write" type="integer" />

    <!-- Primary object (usually certificate) TA filename
         Value: TA file name -->
    <object oid="/crypt/cert/primary/filename" access="read_write"
        type="string" />

    <!-- Primary object (usually certificate) TE file path.
         Empty path in primary and secondary objects is a trigger for object
         generation on 'status' change
         Value: path to file -->
    <object oid="/crypt/cert/primary/path" access="read_write"
        type="string" />

    <!-- Primary object password (if needed)
         Value: string representation of password -->
    <object oid="/crypt/cert/primary/password" access="read_write"
        type="string" />

    <!-- Secondary object (usually private key) TA filename
         Value: TA file name -->
    <object oid="/crypt/cert/secondary/filename" access="read_write"
        type="string" />

    <!-- Secondary object (usually private key) TE file path.
         Empty path in primary and secondary objects is a trigger for object
         generation on 'status' change
         Value: path to file -->
    <object oid="/crypt/cert/secondary/path" access="read_write"
        type="string" />

    <!-- Secondary object password (if needed)
         Value: string representation of password -->
    <object oid="/crypt/cert/secondary/password" access="read_write"
        type="string" />

    <!-- File format.
         Change of it invalidates object paths, triggering object generation
         Value: "pem"       - PEM (base64-encoded) format,
                "der"       - DER (binary) format,
                "pkcs12"    - PKCS12 format -->
    <object oid="/crypt/cert/format" access="read_write" type="string" />

    <!-- Kind of cryptographic entity.
         Change of it invalidates object paths, triggering object generation
         Value: "dh"        - Diffie-Hellman parameters,
                "tls"       - TLS Authentication key,
                "x509"      - generate a new X509 certificate/key,
                "chain"     - create a chain of certificates -->
    <object oid="/crypt/cert/kind" access="read_write" type="string" />

    <!-- Subject parts.
         Change of any of those invalidates object paths, triggering object
         generation
         Value: certificate properties -->
    <object oid="/crypt/cert/x509/subject/commonName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/countryName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/stateOrProvinceName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/localityName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/organizationName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/organizationalUnitName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/emailAddress"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/organizationalUnitName"
        access="read_write" type="string" />
    <object oid="/crypt/cert/x509/subject/emailAddress"
        access="read_write" type="string" />

    <!-- Validity start date
         Change of it invalidates object paths, triggering object generation
         Value: date in OpenSSL format -->
    <object oid="/crypt/cert/x509/valid_since" access="read_write"
        type="string" />

    <!-- Validity end date.
         Change of it invalidates object paths, triggering object generation
         Value: date in OpenSSL format -->
    <object oid="/crypt/cert/x509/valid_until" access="read_write"
        type="string" />

    <!-- Generated key size in bits.
         Change of it invalidates object paths, triggering object generation
         Value: the power of 2 -->
    <object oid="/crypt/cert/x509/bitsize" access="read_write" type="integer" />

    <!-- Encryption type used in the certificate.
         Change of it invalidates object paths, triggering object generation
         Value: cipher supported by OpenSSL, i.e. "des", "aes-256", ... -->
    <object oid="/crypt/cert/x509/encryption" access="read_write"
        type="string" />

    <!-- Cryptographic entity used to sign this object.
         Change of it invalidates object paths, triggering object generation
         Value: friendly name of store entry -->
    <object oid="/crypt/cert/x509/signer" access="read_write"
        type="string" />

    <!-- Chained certificates.
         Addition/deletion of certificates invalidates object paths, triggering
         object generation
         Name: index within a chain
         Value: name of a chained certificate from /crypt/cert -->
    <object oid="/crypt/cert/chained" access="read_create" type="string" />

</backup>
