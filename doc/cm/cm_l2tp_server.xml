<?xml version="1.0"?>
<backup>

    <!--
        This configuration model is intended for describing of configuration
        related to l2tp server on Agents

        Copyright (C) 2015 Test Environment authors (see file AUTHORS
        in the root directory of the distribution).

        Test Environment is free software; you can redistribute it
        and/or modify it under the terms of the GNU General Public
        License as published by the Free Software Foundation; either
        version 2 of the License, or (at your option) any later
        version.

        Test Environment is distributed in the hope that it will be
        useful, but WITHOUT ANY WARRANTY; without even the implied
        warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        PURPOSE. See the GNU General Public License for more details.

        You should have received a copy of the GNU General Public
        License along with this program; if not, write to the Free
        Software Foundation, Inc., 59 Temple Place, Suite 330,
        Boston, MA  02111-1307  USA
    -->

    <!-- An object for the L2TP server's global section
         Name: none -->
    <object oid="/agent/l2tp_global/" 
        access="read_write" type="none"/>

    <!-- Debug parameters for the global
         Name: avp, network, packet, state, tunnel 
     	 Value: 0 (no) or 1 (yes)-->
    <object oid="/agent/l2tp_global/debug" 
        access="read_write" type="integer"/>

    <!-- The IP address of the interface on which the daemon listens
    	 and the UDP port xl2tpd should use.
         Name: like 192.168.1.1:1701-->
    <object oid="/agent/l2tp_global/listen" 
        access="read_write" type="none"/>   

    <!-- An object for the L2TP server
         Name: LNS session name -->
    <object oid="/agent/l2tp_server/" 
        access="read_write" type="none"/>

    <!-- The range of ip addresses the LNS will assign to the 
    	 connecting LAC PPP tunnels and the range of ip addresses of LAC's 
    	 which are allowed to connect to xl2tpd acting as a LNS.
         Name: ip_range, lac
     	 Value: like 192.168.1.2-192.168.1.10 -->
    <object oid="/agent/l2tp_server/range/" 
        access="read_write" type="string"/>

    <!-- This identifier describes the connected
         clients to LNS
         Name: IPv4 address from ip range in human notation (with dots)-->
    <object oid="/agent/l2tp_server/connected" 
        access="read_only" type="none"/>

    <!-- This identifier describes the local
         ip address of the L2TP server
         Name: IPv4 in human notation (with dots) -->
    <object oid="/agent/l2tp_server/local_ip" 
        access="read_write" type="none"/>

    <!-- The L2TP additional bits.
         Name: hidden, length, flow 
     	 Value: 0 (no) or 1 (yes)-->
    <object oid="/agent/l2tp_server/bit" 
        access="read_write" type="integer"/>

    <!-- Authentication methods.
         Name: chap, pap or empty.
         Empty name is needed for the remote peer 
         to authenticate itself. -->
    <object oid="/agent/l2tp_server/authentication" 
        access="read_write" type="none"/>

    <!-- Whether refuse the authentication.
         Name: yes, no -->
    <object oid="/agent/l2tp_server/authentication/refuse" 
        access="read_write" type="none"/>

    <!-- Whether require the authentication.
         Name: yes, no -->
    <object oid="/agent/l2tp_server/authentication/require" 
        access="read_write" type="none"/>

    <!-- Authentication secrets.
         Name: empty
         Value: string with four fields (client, server, secret, IP addresses)
         seperated by "," -->
    <object oid="/agent/l2tp_server/authentication/secrets" 
        access="read_write" type="string"/>      

    <!-- Enable/disable the debug for pppd.
         Name: yes, no -->
    <object oid="/agent/l2tp_server/ppp_debug" 
        access="read_write" type="none"/>

    <!-- Rest authentication parameters.
         Name: unix, challange
         Value: 0 (no) or 1 (yes) -->
    <object oid="/agent/l2tp_server/rest_auth" 
        access="read_write" type="integer"/>

    <!-- Root object for the pppd configuration parameters
         Name: empty -->
    <object oid="/agent/l2tp_server/pppopt/" 
        access="read_write" type="none"/> 

    <!-- Specifying the MTU
         Name: empty -->
    <object oid="/agent/l2tp_server/pppopt/mtu" 
        access="read_write" type="integer"/>   

    <!-- Specifying the MRU
         Name: empty -->
    <object oid="/agent/l2tp_server/pppopt/mru" 
        access="read_write" type="integer"/> 

    <!-- pppd will presume 
         the peer to be dead if n LCP echo-requests are 
         sent without receiving a valid LCP echo-reply. 
         Name: empty -->
    <object oid="/agent/l2tp_server/pppopt/lcp-echo-failure" 
        access="read_write" type="integer"/> 

    <!-- pppd will send an LCP 
         echo-request frame to the peer every n seconds
         Name: empty -->
    <object oid="/agent/l2tp_server/pppopt/lcp-echo-interval" 
        access="read_write" type="integer"/>

    <!-- Addtitional options to pppd
         Name: as example: nodeflate, noproxyarp, lock.
               Other options can be found in man pppd -->
    <object oid="/agent/l2tp_server/pppopt/option" 
        access="read_create" type="none"/>

</backup>