<?xml version="1.0"?>
<backup>

    <!--
        This configuration model is intended for describing of configuration
        related to l2tp server on Agents

        Copyright (C) 2015 Test Environment authors (see file AUTHORS
        in the root directory of the distribution).

        Test Environment is free software; you can redistribute it
        and/or modify it under the terms of the GNU General Public
        License as published by the Free Software Foundation; either
        version 2 of the License, or (at your option) any later
        version.

        Test Environment is distributed in the hope that it will be
        useful, but WITHOUT ANY WARRANTY; without even the implied
        warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        PURPOSE. See the GNU General Public License for more details.

        You should have received a copy of the GNU General Public
        License along with this program; if not, write to the Free
        Software Foundation, Inc., 59 Temple Place, Suite 330,
        Boston, MA  02111-1307  USA
    -->

    <!-- A root object for the L2TP server
         Name: none -->
    <object oid="/agent/l2tp/" 
        access="read_write" type="none"/>

    <!-- The IP address of the interface on which 
         the daemon listens
         Name: empty-->
    <object oid="/agent/l2tp/listen" 
        access="read_write" type="address"/>   

    <!-- The UDP port xl2tpd should use.
         Name: empty-->
    <object oid="/agent/l2tp/port" 
        access="read_write" type="integer"/>  

    <!-- An object for the LNS section
         Name: LNS section name -->
    <object oid="/agent/l2tp/lns" 
        access="read_write" type="none"/>

    <!-- This object stores the ranges of ipv4 addresses
         which will(not) be assigned to the clients 
         Name: allow<START>-<END> for allowed ip_ranges 
               deny<START>-<END> for denied ip_ranges-->
    <object oid="/agent/l2tp/lns/ip_range"
        access="read_create" type="none"/>

    <!-- This object stores the ranges of LAC's ipv4 addresses
         which can(can't) establish the connection with LNS
         Name: allow<START>-<END> for allowed lac_ranges 
               deny<START>-<END> for denied lac_ranges-->
    <object oid="/agent/l2tp/lns/lac_range" 
        access="read_create" type="none"/>

    <!-- This identifier describes the connected
         clients to LNS
         Name: IPv4 address from ip_range in 
               human notation (with dots)-->
    <object oid="/agent/l2tp/lns/connected" 
        access="read_only" type="none"/>

    <!-- This identifier describes the local
         ipv4 address of the L2TP server
         Name: empty -->
    <object oid="/agent/l2tp/lns/local_ip" 
        access="read_write" type="address"/>

    <!-- The L2TP additional bits.
         Name: hidden, length, flow 
         Value: no or yes-->
    <object oid="/agent/l2tp/lns/bit" 
        access="read_write" type="string"/>

    <!-- Authentication methods.
         Name: chap, pap or authentication for
         the remote peer to authenticate itself. -->
    <object oid="/agent/l2tp/lns/auth" 
        access="read_write" type="none"/>

    <!-- Whether refuse the authentication.
         Name: empty
         Value: no or yes-->
    <object oid="/agent/l2tp/lns/auth/refuse" 
        access="read_write" type="string"/>

    <!-- Whether require the authentication.
         Name: empty 
         Value: no or yes-->
    <object oid="/agent/l2tp/lns/auth/require" 
        access="read_write" type="string"/>

    <!-- Client name for the authentication secrets.
         Name: any 
               "*" indicates that any client is allowed-->
    <object oid="/agent/l2tp/lns/auth/client" 
        access="read_write" type="none"/>

    <!-- Server name for the authentication secrets.
         Name: any 
               "*" indicates that any server is allowed -->
    <object oid="/agent/l2tp/lns/auth/client/server" 
        access="read_write" type="none"/>    

    <!-- Secret for the authentication secrets.
         Name: any
               "*" indicates that any secret is allowed -->
    <object oid="/agent/l2tp/lns/auth/client/secret" 
        access="read_write" type="none"/>    

    <!-- IPv4 for the authentication secrets.
         Name: IPv4 in human notation (with dots) 
               "*" indicates that any IP address is allowed -->
    <object oid="/agent/l2tp/lns/auth/client/ipv4" 
        access="read_write" type="none"/>          

    <!-- Use challenge authentication to authenticate peer.
         Name: empty
         Value: no or yes -->
    <object oid="/agent/l2tp/lns/use_challenge" 
        access="read_write" type="string"/>

    <!-- Use /etc/passwd for remote peer ppp authentication.
         Name: empty
         Value: no or yes -->
    <object oid="/agent/l2tp/lns/unix_auth" 
        access="read_write" type="string"/>

    <!-- Root object for the pppd configuration parameters
         Name: empty -->
    <object oid="/agent/l2tp/lns/pppopt/" 
        access="read_write" type="none"/> 

    <!-- Specifying the MTU
         Name: empty -->
    <object oid="/agent/l2tp/lns/pppopt/mtu" 
        access="read_write" type="integer"/>   

    <!-- Specifying the MRU
         Name: empty -->
    <object oid="/agent/l2tp/lns/pppopt/mru" 
        access="read_write" type="integer"/> 

    <!-- pppd will presume 
         the peer to be dead if n LCP echo-requests are 
         sent without receiving a valid LCP echo-reply. 
         Name: empty -->
    <object oid="/agent/l2tp/lns/pppopt/lcp-echo-failure" 
        access="read_write" type="integer"/> 

    <!-- pppd will send an LCP 
         echo-request frame to the peer every n seconds
         Name: empty -->
    <object oid="/agent/l2tp/lns/pppopt/lcp-echo-interval" 
        access="read_write" type="integer"/>

    <!-- Addtitional options to pppd
         Name: as example: nodeflate, noproxyarp, lock.
               Other options can be found in man pppd -->
    <object oid="/agent/l2tp/lns/pppopt/option" 
        access="read_create" type="none"/>

</backup>