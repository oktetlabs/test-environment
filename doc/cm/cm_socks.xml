<?xml version="1.0"?>
<backup>

    <!--
        This configuration model is intended for describing of configuration
        related to socks server on Agents
    -->

    <!--
        Copyright (C) 2003-2018 OKTET Labs.

        Author: Svetlana Fishchuk E-mail: Svetlana.Fishchuk@oktetlabs.ru
    -->

    <!-- A root object for the socks server
         Name: any
         Value: 0 - disabled, 1 - enabled -->
    <object oid="/agent/socks"
        access="read_create" type="integer"/>

    <!-- Server's actual status
         Name: empty
         Value: 0 - disabled, 1 - enabled -->
    <object oid="/agent/socks/status"
        access="read_write" type="integer"/>

    <!-- The implementation to use for that server
         Name: empty
         Value: "srelay" - srelay server -->
    <object oid="/agent/socks/impl"
        access="read_write" type="string"/>

    <!-- The set of protocols to use for that server. Note that support of this
         parameter is implementation dependent
         Name: any
         Value: integer value representing protocol, e.g. RPC_IPPROTO_TCP -->
    <object oid="/agent/socks/proto"
        access="read_create" type="integer"/>

    <!-- Interfaces for incoming connections to listen at.
         Name: any
         Value: e.g. 'eth1' -->
    <object oid="/agent/socks/interface"
        access="read_create" type="string"/>

    <!-- Port to be used for selected interface.
         Name: empty
         Value: any valid port -->
    <object oid="/agent/socks/interface/port"
        access="read_write" type="integer"/>

    <!-- Address family to be used for selected interface.
         Name: empty
         Value: any valid address family integer value, e.g. RPC_AF_INET -->
    <object oid="/agent/socks/interface/addr_family"
        access="read_write" type="integer"/>

    <!-- Interface to pass packets to.
         Name: empty
         Value: e.g. 'eth1' -->
    <object oid="/agent/socks/outbound_interface"
        access="read_write" type="string"/>

    <!-- Cipher to use for extra security. Note that support of this parameter
         is implementation-dependent.
         Name: any
         Value: any value supported by target implementation -->
    <object oid="/agent/socks/cipher"
        access="read_create" type="string"/>

    <!-- Authentication type which is used for user verification.
         Name: any
         Value: any value supported by target implementation, e.g. "plain" -->
    <object oid="/agent/socks/auth"
        access="read_write" type="string"/>

    <!-- List of users for relaying.
         Name: any
         Value: none -->
    <object oid="/agent/socks/user"
        access="read_create" type="none"/>

    <!-- Next hop for the relaying user.
         Name: empty
         Value: IP of next SOCKS server -->
    <object oid="/agent/socks/user/next_hop"
        access="read_write" type="string"/>

    <!-- Internal username for the relaying user.
         Name: empty
         Value: any valid string -->
    <object oid="/agent/socks/user/username"
        access="read_write" type="string"/>

    <!-- Password for the relaying user.
         Name: empty
         Value: any valid string -->
    <object oid="/agent/socks/user/password"
        access="read_write" type="string"/>

    <!-- Process ID of the running SOCKS daemon
         Name: any
         Value: process ID of running daemon, or -1 -->
    <object oid="/agent/socks/process_id"
        access="read_only" type="integer" volatile="true"/>
</backup>
