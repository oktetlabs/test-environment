<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema version="$Id$"
  xml:lang="en"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    
    <xs:annotation>
        <xs:documentation>
            Test Environment
            XML schema for configuration file of Configurator subsystem
        
            Copyright (C) 2003 Test Environment authors (see file AUTHORS
            in the root directory of the distribution).

            Test Environment is free software; you can redistribute it
            and/or modify it under the terms of the GNU General Public
            License as published by the Free Software Foundation; either
            version 2 of the License, or (at your option) any later
            version.
            
            Test Environment is distributed in the hope that it will be
            useful, but WITHOUT ANY WARRANTY; without even the implied
            warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
            PURPOSE. See the GNU General Public License for more details.
            
            You should have received a copy of the GNU General Public
            License along with this program; if not, write to the Free
            Software Foundation, Inc., 59 Temple Place, Suite 330,
            Boston, MA  02111-1307  USA
            
            Author: Elena Vengerova &lt;Elena.Vengerova@oktetlabs.ru&gt;

        </xs:documentation>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
        
            Configuration file may be either "backup" - list
            of objects and object instances or "history" - list
            of register, add, set and delete commands.

        </xs:documentation>
    </xs:annotation>
  
    <xs:simpleType name="yes_no">
        <xs:annotation>
            <xs:documentation>
                yes/no
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="object">
        <xs:annotation>
            <xs:documentation>
                Object description
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="depends" 
                            minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            An object OID the given object depends on
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute name="oid" 
                                      type="xs:string" use="required"/>
                        <xs:attribute name="scope" default="instance">
                            <xs:simpleType>
                                <xs:restriction base="xs:token">
                                    <xs:enumeration value="instance"/>
                                    <xs:enumeration value="object"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
               </xs:element>
            </xs:sequence>
            <xs:attribute name="oid" type="xs:string" use="required"/>
            <xs:attribute name="type" default="none">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="none"/>
                        <xs:enumeration value="integer"/>
                        <xs:enumeration value="string"/>
                        <xs:enumeration value="address"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="access" default="read_create">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="read_write"/>
                        <xs:enumeration value="read_only"/>
                        <xs:enumeration value="read_create"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="default" type="xs:string"/>
            <xs:attribute name="volatile" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true"/>
                        <xs:enumeration value="false"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="parent-dep" type="yes_no" default="yes" />
        </xs:complexType>
    </xs:element>

    <xs:element name="instance">
        <xs:annotation>
            <xs:documentation>
                Object instance description
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="oid" type="xs:string" use="required"/>
            <xs:attribute name="value" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="register">
        <xs:annotation>
            <xs:documentation>
                Register object command
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="object" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="add">
        <xs:annotation>
            <xs:documentation>
                Add object instance command (attribute value of 
                the instance element is required for objects with integer, 
                string or address types).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="instance" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="set">
        <xs:annotation>
            <xs:documentation>
                Change object instance value (attribute value of the
                instance element is required for objects with integer,
                string or address types).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="instance" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="delete">
        <xs:annotation>
            <xs:documentation>
                Delete object instance (attribute value of the instance 
                element is ignored, if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="instance" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="reboot">
        <xs:annotation>
            <xs:documentation>
                Reboot Test Agent.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="ta" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="backup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="object" maxOccurs="unbounded"
                                         minOccurs="0"/>
                <xs:element ref="instance" maxOccurs="unbounded"
                                           minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="history">
        <xs:complexType>
            <xs:sequence maxOccurs="unbounded" minOccurs="0">
                <xs:choice>
                    <xs:element ref="register"/>
                    <xs:element ref="add"/>
                    <xs:element ref="set"/>
                    <xs:element ref="delete"/>
                    <xs:element ref="reboot"/>
                    <xs:element ref="history"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xsd:schema>
