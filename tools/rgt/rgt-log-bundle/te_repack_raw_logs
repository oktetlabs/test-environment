#!/bin/bash
# SPDX-License-Identifier: Apache-2.0
# Copyright (C) 2016-2022 OKTET Labs Ltd. All rights reserved.

export TMPDIR="${TMPDIR:-/tmp}"

set -e

raw_log_name="log.raw.bz2"

usage()
{
    cat <<EOF
Repacking existing raw logs in specified directories and their subdirs:
<raw log archive> -> raw_log_bundle.tpxz
Usage: repack_raw_logs [options] dir_path1 [dir_path2 dir_path3 ... dir_pathN]

Options:
    --log-name=STRING               Raw log name (log.raw.bz2 by default)
    --repack-existing=[yes|no]      Repack existing bundles (yes by
                                    default)
    --remove-original=[yes|no]      Remove original raw log after creating
                                    bundle (no by default)
Environment variables:
    TMPDIR          Directory for temporary files (/tmp/ if not set)
    PATH            Should include path to TE scripts and tools
EOF
}

repack_existing=yes
remove_original=no

while [[ "$#" -gt 0 ]] ; do
    case "$1" in
        "" ) ;; # Ignore empty arguments
        --help ) usage ; exit 0 ;;
        -h )     usage ; exit 0 ;;
        --log-name=* ) raw_log_name="${1#--log-name=}" ;;
        --repack-existing=* ) repack_existing="${1#--repack-existing=}" ;;
        --remove-original=* ) remove_original="${1#--remove-original=}" ;;
        *) break ;;
    esac
    shift 1
done

if test x"$*" = x ; then
    echo "Path(s) were not specified" 2>&1
    usage
    exit 1
fi
if test x"${repack_existing}" != x"no" -a \
        x"${repack_existing}" != x"yes" ; then
    echo "--repack-existing may be only 'yes' or 'no'" 2>&1
    usage
    exit 1
fi
if test x"${remove_original}" != x"no" -a \
        x"${remove_original}" != x"yes" ; then
    echo "--remove-original may be only 'yes' or 'no'" 2>&1
    usage
    exit 1
fi

raw_from_archive=
raw_from_bundle=

# Remove temporary files created by check_bundle()
check_bundle_cleanup()
{
    if test -n "${raw_from_archive}" ; then
        rm "${raw_from_archive}" || \
            echo "Failed to remove ${raw_from_archive}" 2>&1
    fi
    if test -n "${raw_from_bundle}" ; then
        rm "${raw_from_bundle}" || \
            echo "Failed to remove ${raw_from_bundle}" 2>&1
    fi
}

# Check that existing raw_log_bundle.tpxz matches existing
# raw log archive, i.e. the same raw log can be extracted from both
# of them and therefore raw log archive can be safely removed
check_bundle()
{
    log_dir=$1

    raw_from_archive=
    raw_from_bundle=

    raw_from_archive=$(mktemp "${TMPDIR}/raw_log_XXXXXX") && rc=0 || rc=1
    if test $rc -ne 0 ; then
        echo "Failed to create temporary file" 2>&1
        check_bundle_cleanup
        return 1
    fi
    raw_from_bundle=$(mktemp "${TMPDIR}/raw_log_XXXXXX") && rc=0 || rc=1
    if test $rc -ne 0 ; then
        echo "Failed to create temporary file" 2>&1
        check_bundle_cleanup
        return 1
    fi

    if [[ "${raw_log_name}" =~ [.]bz2$ ]] ; then
        bunzip2 --keep "${log_dir}/${raw_log_name}" -c >"${raw_from_archive}" \
            && rc=0 || rc=1
    elif [[ "${raw_log_name}" =~ [.]xz$ ]] ; then
        xz --decompress --keep --stdout "${log_dir}/${raw_log_name}" \
            >"${raw_from_archive}" && rc=0 || rc=1
    else
        echo "Unknown archive format: ${raw_log_name}"
        rc = 1;
    fi
    if test $rc -ne 0 ; then
        echo "Failed to unpack raw log from archive" 2>&1
        check_bundle_cleanup
        return 1
    fi

    rgt-log-bundle-get-original --bundle="${log_dir}/raw_log_bundle.tpxz" \
        --raw-log="${raw_from_bundle}" && rc=0 || rc=1
    if test $rc -ne 0 ; then
        echo "Failed to recover original raw log from bundle" 2>&1
        check_bundle_cleanup
        return 1
    fi

    diff "${raw_from_archive}" "${raw_from_bundle}" && rc=0 || rc=1
    if test $rc -ne 0 ; then
        echo "Exising bundle is broken" 2>&1
        check_bundle_cleanup
        return 1
    fi

    check_bundle_cleanup
    return 0
}

# Repack found raw log archive files into raw_log_bundle.tpxz files
process_raw_logs()
{
    while read file_name || [[ -n "${file_name}" ]] ; do
        echo "Repacking '${file_name}'..."
        log_dir=$(dirname "${file_name}") && rc=0 || rc=1
        if test $rc -ne 0 ; then
            echo "REPACK ERROR: Failed to " \
                 "determine directory of '${file_name}'" 2>&1
        else
            if test x"${repack_existing}" = x"no" -a \
                    -f "${log_dir}/raw_log_bundle.tpxz" ; then
                echo "Raw log bundle already exists"

                check_bundle "${log_dir}" && rc=0 || rc=1
                if test $rc -ne 0 ; then
                    echo "REPACK ERROR: existing bundle does " \
                         "not match existing raw log" 2>&1
                else
                    if test x"${remove_original}" = x"yes" ; then
                        rm "${file_name}" && rc=0 || rc=1
                        if test $rc -ne 0 ; then
                            echo "REPACK ERROR: Failed " \
                                 "to delete '${file_name}'" 2>&1
                        fi
                    fi

                    chmod o-rwx "${log_dir}/raw_log_bundle.tpxz" && \
                          rc=0 || rc=1
                    if test $rc -ne 0 ; then
                        echo "REPACK ERROR: Failed to change permissions " \
                             "for '${log_dir}/raw_log_bundle.tpxz'" 2>&1
                    fi
                fi
            else
                rgt-log-bundle-create --raw-log="${file_name}" \
                    --bundle="${log_dir}/raw_log_bundle.tpxz" && rc=0 || rc=1
                if test $rc -ne 0 ; then
                    echo "REPACK ERROR: Failed to repack '${file_name}'" 2>&1
                else
                    # rgt-log-bundle-create returns success
                    # only after checking that original raw log
                    # can be recovered from bundle and is exactly the same
                    # as raw log used for creating the bundle, so there is
                    # no point to redo this check here

                    if test x"${remove_original}" = x"yes" ; then
                        rm "${file_name}" && rc=0 || rc=1
                        if test $rc -ne 0 ; then
                            echo "REPACK ERROR: Failed to " \
                                 "delete '${file_name}'" 2>&1
                        fi
                    fi

                    chmod o-rwx "${log_dir}/raw_log_bundle.tpxz" && \
                          rc=0 || rc=1
                    if test $rc -ne 0 ; then
                        echo "REPACK ERROR: Failed to change permissions " \
                             "for '${log_dir}/raw_log_bundle.tpxz'" 2>&1
                    fi
                fi
            fi
        fi
    done
}

find -L $@ -name "${raw_log_name}" | process_raw_logs
