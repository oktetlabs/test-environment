#!/usr/bin/perl

use strict;
use warnings;
use File::Spec;
use File::Basename;

my $cgi_path = "/usr/lib/cgi-bin/local/socktest/";
my $cli_path = "/home/tester-l5/night_logs_caches/";
my $def_test = "sockapi-ts/sockopts/bindtodevice_dstunreach";
my $user = "tester-l5";
my $group = "www-data";

foreach my $arg (@ARGV)
{
    if ($arg =~ m/^--cgi-path=(.+)$/)
    {
        $cgi_path = File::Spec->rel2abs($1)."/";
    }
    elsif ($arg =~ m/^--cli-path=(.+)$/)
    {
        $cli_path = File::Spec->rel2abs($1)."/";
    }
    elsif ($arg =~ m/^--user=(.+)$/)
    {
        $user = $1;
    }
    elsif ($arg =~ m/^--group=(.+)$/)
    {
        $group = $1;
    }
    elsif ($arg =~ m/^--def-test=(.+)$/)
    {
        $def_test = $1;
    }
    elsif ($arg =~ m/^--help$/)
    {
        print "Deploying CGI scripts\n".
              "--cgi_path=             Where to place CGI scripts\n".
              "--cli_path=             Where auxiliary scripts will be stored\n".
              "--user=                 Name of user owning scripts\n".
              "--group=                Name of group owning scripts\n".
              "--def-test=             Default test provided as an example\n";

        exit(0);
    }
}

if (system("mkdir -p $cli_path") != 0 ||
    system("mkdir -p $cgi_path") != 0)
{
    die "Specified paths are not accessible";
}

sub escape_path
{
    my $path = $_[0];

    $path =~ s/\//\\\//g;
    return $path;
}

sub fix_script
{
    my $script = $_[0];

    if (system("sed -i 's/#USE_LIB/use lib \"".
               escape_path($cli_path)."\";/g' $script") != 0)
    {
        die "Failed to replace #USE_LIB in $script";
    }

    if (system("sed -i 's/CLI_PATH/\"".
               escape_path($cli_path)."\"/g' $script") != 0)
    {
        die "Failed to replace CLI_PATH in $script";
    }

    if (system("sed -i 's/DEF_TEST/".escape_path(${def_test}).
               "/g' $script") != 0)
    {
        die "Failed to replace DEF_TEST in $script";
    }
}

my %files = ( "$cgi_path" => [ "./cgi_scripts/form.html",
                               "./cgi_scripts/index.pl",
                               "./cgi_scripts/process_form.pl",
                               "./cgi_scripts/compromise.pl",
                               "./cgi_scripts/night_status.pl" ],
              "$cli_path" => [ "./cli_scripts/add_new_cache",
                               "./cli_scripts/te_get_nlogs_results",
                               "./cli_scripts/compromise_log",
                               "./cli_scripts/update_caches" ],
              "$cli_path/night_logs_cgi_aux/" =>
                  [ "./cli_scripts/night_logs_cgi_aux/aux_funcs.pm" ] );

my $rc;

foreach my $path (keys %files)
{
    if (system("mkdir -p $path") != 0 ||
        system("chown $user:$group $path") != 0 ||
        system("chmod 0750 $path") != 0)
    {
        die "Failed to set up $path";
    }

    foreach my $file (@{$files{$path}})
    {
        if (system("cp $file $path/") != 0 ||
            system("chown $user:$group $path/".basename($file)) != 0 ||
            system("chmod 0750 $path/".basename($file)) != 0)
        {
            die "Failed to install $file to $path";
        }

        fix_script($path."/".basename($file));
    }
}

exit(0);
