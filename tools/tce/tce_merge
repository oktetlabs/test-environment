#! /usr/bin/awk -f
# SPDX-License-Identifier: Apache-2.0
#
# Test Coverage Estimation
#
# Script to merge TCE results from different sources
#
#
# Copyright (C) 2004-2022 OKTET Labs Ltd. All rights reserved.

BEGIN { MODE = ARGV[1]; ARGV[1] = ""; deltafile = ARGV[2]; ARGV[2] = ""; MERGER = "tce_merge_" MODE}

$1 == "FILE" {
    if ((getline delta < deltafile) <= 0)
    {
        if (MODE != "min")
        {
            print;
            while ((getline) > 0) print;
        }
        exit 0
    }
    split(delta, deltafields);
    if (deltafields[1] != "FILE")
    {
        print "master and delta files are incompatible" > "/dev/stderr";
        exit 1
    }
    while ($2 != deltafields[2] || $5 != deltafields[5])
    {
        if ($2 SUBSEP deltafields[2] < $5 SUBSEP deltafields[$5])
        {
            if (MODE != "min") print;
            for (;;)
            {
                if ((getline) <= 0) exit 0;
                if ($1 == "FILE") break;
                if (MODE != "min")
                {
                    if (MODE == "diff" && $1 != "SUMMARY") $1 = "-0";
                    print
                }
            }
        }
        else
        {
            if (MODE != "min") print delta;
            for (;;)
            {
                if ((getline delta < deltafile) <= 0) exit 0;
                split(delta, deltafields);
                if (deltafields[1] == "FILE") break;
                if (MODE != "min") print delta;
            }
        }
    }
    if ($3 != deltafields[3] || $4 != deltafields[4])
    {
        print "master and delta files refer to different source versions" > "/dev/stderr"
        exit
    }
    print $1, $2, $3, $4, $5, $6 + deltafields[6]
    fflush();
    next
}

$1 == "SUMMARY" {
    getline delta < deltafile;
    if (delta !~ /^SUMMARY/)
    {
        print "master and delta files are incompatible" > "/dev/stderr";
        exit 1;
    }
    close(MERGER);
    next
}

{
    getline delta < deltafile;
    print $0, delta | MERGER
}


END {
    if (MODE != "min")
    {
        while ((getline < deltafile) > 0) print;
    }
}
