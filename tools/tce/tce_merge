#! /bin/sh
#
# Test Coverage Estimation
#
# Script to merge TCE results from different sources
#
#
# Copyright (C) 2005 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author Artem V. Andreev <Artem.Andreev@oktetlabs.ru>
#
# $Id$
#

mergefile=$1
ignoredir=$2
exclude=$3
gcovfile=$4
modulename=$5
resultfile=${gcovfile}.new

source=`head -n1 $gcovfile | awk -F: '{ print $NF }'`
if test -n "$exclude"; then
    if expr $source : "$exclude" >/dev/null; then
        exit 0
    fi
fi

if test -n "$ignoredir"; then
    stamp=`basename $source | md5sum | awk '{print $1}'`
else
    stamp=`head -n2 $gcovfile | md5sum | awk '{ print $1}'`
fi
stamp=${stamp}.${modulename}
oldfile=${stamp}
if ar x "$mergefile" "$stamp" 2>/dev/null && test -f "$stamp"; then
    (   if test "`cat $oldfile | wc -l`" -ne "`cat $gcovfile | wc -l`"; then
            exit 1
        fi
        awk "{ print; getline < \"$gcovfile\"; print }" $oldfile  |
        awk -F: \
            '/^[[:space:]]*(branch|call|function)/ {
                 print
                 next
             }
             {
                 oldcount=$1
                 getline
                 if(oldcount ~ /-/) {
                     printf "%s\n", $0
                 }
                 else {
                     sourceline=""
                     for(i = 3; i <= NF; i++)
                     {
                         if(sourceline)  sourceline=sourceline ":";
                         sourceline=sourceline $i
                     }
                     sum = $1 + oldcount;
                     printf "%9s:%5s:%s\n", sum == 0 ? "#####" : sum, $2, sourceline
                 }
             }' |
        awk '/^[[:space:]]*(branch|call)/ {
                oldcount=($3 == "never" ? $3 : $4)
                getline
                if (oldcount == "never" && $3 == "never")
                {
                    sum = ""
                    taken = "never executed"
                }
                else
                {
                    sum = oldcount + $4
                    taken = ($1 == "branch" ? "taken " : "returns ")
                }
                printf "%6s %2d %s%s\n", $1, $2, taken, sum
                next
             }
             /^[[:space:]]*function/ {
                 oldcount = $4 + 0
                 oldretp  = $6
                 sub(/%$/, "", oldretp);
                 oldblock = $9
                 sub(/%$/, "", oldblock);
                 getline
                 sub(/%$/, "", $6);
                 sub(/%$/, "", $9);
                 printf "function %s called %d returned %s%% blocks executed %s%%\n", $2, \
                     oldcount + $4, \
                     ((oldretp * oldcount / 100) + ($6 * $4 / 100)) / (oldcount + $4) * 100, \
                     oldblock < $9 ? $9 : oldblock;
                 next
             }
             { print }'> $resultfile
) || (  echo "$gcovfile: files mismatch, not merging" >2
        cp $gcovfile $resultfile )
else
    cp $gcovfile $resultfile
fi

rm -f $oldfile
mv $resultfile $oldfile
ar cr $mergefile $stamp
rm -f $oldfile

