#! /bin/sh
#
# Test Coverage Estimation
#
# TE_GCC -- a wrapper around GCC to perform TCE with gcov
#
#
# Copyright (C) 2005 Test Environment authors (see file AUTHORS in
# the root directory of the distribution).
#
# Test Environment is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# Test Environment is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
#
# Author Artem V. Andreev <Artem.Andreev@oktetlabs.ru>
#
# $Id$
#

# Use 'gcc' by default
test -z "${TCE_CC}" && TCE_CC="gcc"

coverage_options=
processed_options=
for arg in "$@"; do
    case "$arg" in
        --version|-E|-version)
        exec ${TCE_CC} "$@"
        ;;
        -c) nobbhook=yes
        processed_options="$processed_options -c" ;;
        -O[1-9]|-O) processed_options="$processed_options -D__OPTIMIZE__=1" ;;
        -g|-ftest-coverage|-fprofile-arcs|-nostartfiles) ;;
        -*) processed_options="$processed_options $arg" ;;
        *)
        if test -n "$TCE_SRC"; then
            mydir=`dirname $arg`
            myself=`basename $arg`
            fullpath=`cd $mydir; echo $PWD`/$myself
            for tce in ${TCE_SRC}; do
                case "$fullpath" in
                    $tce*)
                    coverage_options="-g -ftest-coverage -fprofile-arcs -D_init=_target_init -D_fini=_target_fini"
                    ;;
                esac
            done
        else
            coverage_options="-g -ftest-coverage -fprofile-arcs -D_init=_target_init -D_fini=_target_fini"
        fi
        processed_options="$processed_options $arg"
           ;;
    esac
done

if test -z "$nobbhook"; then
    TCELIB=/tmp/tcelib$$
    BBHOOK_O=$TCELIB/bbhook.o
    LIBGCOV_A=$TCELIB/libgcov.a
    mkdir $TCELIB
    for i in $CC; do
        tmpcc=$i
    done
    selfpath=`cd \`dirname \\\`which $tmpcc\\\`\` && pwd && cd -`
    ${TCE_CC} -c ${TCE_CFLAGS} -o $BBHOOK_O -I${selfpath}/../include ${selfpath}/../share/tce/bbhook.c
    ar crs $LIBGCOV_A $BBHOOK_O
    BBHOOK_O="-L$TCELIB -lgcov"
else
    BBHOOK_O=""
fi

${TCE_CC} $coverage_options $processed_options $BBHOOK_O
gccstatus=$?

if test -z "$nobbhook"; then
    rm -rf $TCELIB
fi

exit $gccstatus
